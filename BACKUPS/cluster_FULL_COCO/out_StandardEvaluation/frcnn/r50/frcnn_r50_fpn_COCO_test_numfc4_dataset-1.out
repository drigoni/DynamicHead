
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
Date:  gio 13 ott 2022, 01.42.34, CEST
Directory:  /ceph/hpc/home/eudavider/repository/DynamicHead
Nodelist:  gn04
Number of nodes:  1
Ntasks per node:  1
NGPUs per node:  1
CUDA_VISIBLE_DEVICES:  0
TORCH_DEVICE_COUNT:  1
SLURM_MASTER_PORT:  14837
SLURM_MASTER_NODE:  gn04
SLURM_MASTER_ADDR:  gn04
SLURM_MASTER_URL:  tcp://gn04:14837
--------------------------------------------- 
MODEL_NUM_GPUS:  1
MODEL_NUM_MACHINES:  1
MODEL_BATCH_SIZE:  5
MODEL_MAX_ITER:  576000
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 

srun: error: WARNING: Multiple leaf switches contain nodes: gn[01-60]
[nltk_data] Downloading package omw-1.4 to
[nltk_data]     /ceph/hpc/home/eudavider/nltk_data...
[nltk_data]   Package omw-1.4 is already up-to-date!
[nltk_data] Downloading package wordnet to
[nltk_data]     /ceph/hpc/home/eudavider/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
Command Line Args: Namespace(config_file='./configs/COCO/frcnn/r50/frcnn_r50_fpn_COCO_test_numfc4.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://gn04:14837', opts=['SOLVER.IMS_PER_BATCH', '5', 'SOLVER.MAX_ITER', '576000', 'DATASETS.TEST', '("coco_2017_val_subset",)'])
[32m[10/13 01:43:01 detectron2]: [0mRank of current process: 0. World size: 1
[32m[10/13 01:43:03 detectron2]: [0mEnvironment info:
----------------------  ------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.9.13 | packaged by conda-forge | (main, May 27 2022, 16:56:21) [GCC 10.3.0]
numpy                   1.23.1
detectron2              0.6 @/ceph/hpc/home/eudavider/.local/lib/python3.9/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5, 8.0, 8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/ceph/hpc/home/eudavider/.conda/envs/dynamicHead/lib/python3.9/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA A100-SXM4-40GB (arch=8.0)
Driver version          510.47.03
CUDA_HOME               /usr/local/cuda
Pillow                  9.2.0
torchvision             0.11.0 @/ceph/hpc/home/eudavider/.conda/envs/dynamicHead/lib/python3.9/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20220512
iopath                  0.1.9
cv2                     Not found
----------------------  ------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[32m[10/13 01:43:03 detectron2]: [0mCommand line arguments: Namespace(config_file='./configs/COCO/frcnn/r50/frcnn_r50_fpn_COCO_test_numfc4.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://gn04:14837', opts=['SOLVER.IMS_PER_BATCH', '5', 'SOLVER.MAX_ITER', '576000', 'DATASETS.TEST', '("coco_2017_val_subset",)'])
[32m[10/13 01:43:03 detectron2]: [0mContents of args.config_file=./configs/COCO/frcnn/r50/frcnn_r50_fpn_COCO_test_numfc4.yaml:
_BASE_: "../base_frcnn_COCO.yaml"
MODEL:
  WEIGHTS: "./results/COCO/frcnn/frcnn_r50_fpn_COCO_numfc4/model_final.pth"
  MASK_ON: False
  RESNETS:
    DEPTH: 50
  ROI_BOX_HEAD:
    FC_DIM: 2048 # standard=1024
    NUM_FC: 4 # standard=2
DATASETS:
  TRAIN: ("coco_2017_train",)
  TEST: ("coco_2017_val",)
  # TEST: ("coco_2017_val_subset",)
  # TEST: ("coco_2017_val_powerset",)
OUTPUT_DIR: "./results/COCO/frcnn/frcnn_r50_fpn_COCO_numfc4/"
[32m[10/13 01:43:03 detectron2]: [0mRunning with full config:
CONCEPT:
  APPLY_CONDITION: true
  APPLY_CONDITION_FROM_FILE: false
  APPLY_FILTER: true
  CONCEPT_FUSION: cat
  DEPTH: 3
  EXTERNAL_CONCEPTS_FOLDER: ./datasets/ewiser_concepts_COCO_valid/
  FILE: ./concept/coco_to_synset.json
  ONLY_NAME: true
  UNIQUE: true
  VOCAB: ./concept/vocab.json
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 32
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_2017_val_subset
  TRAIN:
  - coco_2017_train
DEEPSETS:
  AGGREGATE: sum
  EMB: wordnet
  EMB_DIM: 150
  FILE: ./concept/wn30_holE_500_150_0.1_0.2_embeddings.pickle
  FREEZE: true
  MLP1_LAYERS: 2
  MLP2_LAYERS: 1
  OUTPUT_DIM: 256
EVALUATOR_TYPE: default
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 640
  - 672
  - 704
  - 736
  - 768
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
    - - 64
    - - 128
    - - 256
    - - 512
  ATSS:
    BBOX_REG_WEIGHTS:
    - 10.0
    - 10.0
    - 5.0
    - 5.0
    CHANNELS: 256
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    INFERENCE_TH: 0.05
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_TH: 0.6
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    REG_LOSS_WEIGHT: 2.0
    TOPK: 9
    USE_GN: true
  BACKBONE:
    FREEZE_AT: -1
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  DYHEAD:
    CHANNELS: 256
    NUM_CONVS: 6
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 2048
    NAME: FastRCNNConvFCHead
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    - p6
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  SWINT:
    APE: false
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.2
    EMBED_DIM: 96
    MLP_RATIO: 4
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - stage2
    - stage3
    - stage4
    - stage5
    OUT_NORM: true
    VERSION: 1
    WINDOW_SIZE: 7
  WEIGHTS: ./results/COCO/frcnn/frcnn_r50_fpn_COCO_numfc4/model_final.pth
OUTPUT_DIR: ./results/COCO/frcnn/frcnn_r50_fpn_COCO_numfc4/
SEED: 2022
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.0025
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 5
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 576000
  MOMENTUM: 0.9
  NESTEROV: false
  OPTIMIZER: SGD
  REFERENCE_WORLD_SIZE: 0
  STEPS:
  - 60000
  - 80000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[32m[10/13 01:43:03 detectron2]: [0mFull config saved to ./results/COCO/frcnn/frcnn_r50_fpn_COCO_numfc4/config.yaml
[32m[10/13 01:43:11 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=2048, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=2048, out_features=2048, bias=True)
      (fc_relu2): ReLU()
      (fc3): Linear(in_features=2048, out_features=2048, bias=True)
      (fc_relu3): ReLU()
      (fc4): Linear(in_features=2048, out_features=2048, bias=True)
      (fc_relu4): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=320, bias=True)
    )
  )
)
[32m[10/13 01:43:11 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from ./results/COCO/frcnn/frcnn_r50_fpn_COCO_numfc4/model_final.pth ...
Load concept for each category. 
[32m[10/13 01:43:15 d2.data.datasets.coco]: [0mLoaded 5000 images in COCO format from datasets/concept_coco/annotations/instances_val2017_subset.json
[32m[10/13 01:43:15 d2.data.build]: [0mRemoved 48 images with no usable annotations. 4952 images left.
[32m[10/13 01:43:15 d2.data.build]: [0mDistribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 6943         |   bicycle    | 190          |      car      | 1180         |
|  motorcycle   | 250          |   airplane   | 115          |      bus      | 200          |
|     train     | 151          |    truck     | 291          |     boat      | 304          |
| traffic light | 475          | fire hydrant | 75           |   stop sign   | 51           |
| parking meter | 42           |    bench     | 282          |     bird      | 264          |
|      cat      | 145          |     dog      | 155          |     horse     | 210          |
|     sheep     | 289          |     cow      | 307          |   elephant    | 231          |
|     bear      | 69           |    zebra     | 260          |    giraffe    | 217          |
|   backpack    | 246          |   umbrella   | 269          |    handbag    | 345          |
|      tie      | 181          |   suitcase   | 214          |    frisbee    | 85           |
|     skis      | 180          |  snowboard   | 48           |  sports ball  | 181          |
|     kite      | 221          | baseball bat | 80           | baseball gl.. | 100          |
|  skateboard   | 125          |  surfboard   | 185          | tennis racket | 168          |
|    bottle     | 632          |  wine glass  | 214          |      cup      | 497          |
|     fork      | 155          |    knife     | 209          |     spoon     | 156          |
|     bowl      | 366          |    banana    | 267          |     apple     | 173          |
|   sandwich    | 128          |    orange    | 198          |   broccoli    | 211          |
|    carrot     | 273          |   hot dog    | 78           |     pizza     | 205          |
|     donut     | 244          |     cake     | 160          |     chair     | 1183         |
|     couch     | 150          | potted plant | 208          |      bed      | 117          |
| dining table  | 400          |    toilet    | 143          |      tv       | 178          |
|    laptop     | 138          |    mouse     | 73           |    remote     | 200          |
|   keyboard    | 97           |  cell phone  | 159          |   microwave   | 37           |
|     oven      | 96           |   toaster    | 8            |     sink      | 163          |
| refrigerator  | 87           |     book     | 703          |     clock     | 204          |
|     vase      | 184          |   scissors   | 26           |  teddy bear   | 138          |
|  hair drier   | 9            |  toothbrush  | 35           |               |              |
|     total     | 24226        |              |              |               |              |[0m
[32m[10/13 01:43:15 d2.data.common]: [0mSerializing 4952 elements to byte tensors and concatenating them all ...
[32m[10/13 01:43:15 d2.data.common]: [0mSerialized dataset takes 13.27 MiB
[5m[31mWARNING[0m [32m[10/13 01:43:15 d2.evaluation.coco_evaluation]: [0mCOCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[32m[10/13 01:43:16 d2.evaluation.evaluator]: [0mStart inference on 4952 batches
/ceph/hpc/home/eudavider/.local/lib/python3.9/site-packages/detectron2/structures/image_list.py:88: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  max_size = (max_size + (stride - 1)) // stride * stride
/ceph/hpc/home/eudavider/.conda/envs/dynamicHead/lib/python3.9/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1634272164809/work/aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
[32m[10/13 01:43:19 d2.evaluation.evaluator]: [0mInference done 11/4952. Dataloading: 0.0121 s/iter. Inference: 0.0349 s/iter. Eval: 0.0002 s/iter. Total: 0.0472 s/iter. ETA=0:03:53
[32m[10/13 01:43:24 d2.evaluation.evaluator]: [0mInference done 179/4952. Dataloading: 0.0017 s/iter. Inference: 0.0281 s/iter. Eval: 0.0002 s/iter. Total: 0.0304 s/iter. ETA=0:02:24
[32m[10/13 01:43:29 d2.evaluation.evaluator]: [0mInference done 337/4952. Dataloading: 0.0018 s/iter. Inference: 0.0286 s/iter. Eval: 0.0002 s/iter. Total: 0.0310 s/iter. ETA=0:02:23
[32m[10/13 01:43:34 d2.evaluation.evaluator]: [0mInference done 495/4952. Dataloading: 0.0018 s/iter. Inference: 0.0288 s/iter. Eval: 0.0002 s/iter. Total: 0.0313 s/iter. ETA=0:02:19
[32m[10/13 01:43:39 d2.evaluation.evaluator]: [0mInference done 650/4952. Dataloading: 0.0018 s/iter. Inference: 0.0291 s/iter. Eval: 0.0002 s/iter. Total: 0.0315 s/iter. ETA=0:02:15
[32m[10/13 01:43:44 d2.evaluation.evaluator]: [0mInference done 808/4952. Dataloading: 0.0018 s/iter. Inference: 0.0292 s/iter. Eval: 0.0002 s/iter. Total: 0.0316 s/iter. ETA=0:02:10
[32m[10/13 01:43:50 d2.evaluation.evaluator]: [0mInference done 961/4952. Dataloading: 0.0018 s/iter. Inference: 0.0294 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:02:06
[32m[10/13 01:43:55 d2.evaluation.evaluator]: [0mInference done 1117/4952. Dataloading: 0.0018 s/iter. Inference: 0.0294 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:02:02
[32m[10/13 01:44:00 d2.evaluation.evaluator]: [0mInference done 1272/4952. Dataloading: 0.0018 s/iter. Inference: 0.0294 s/iter. Eval: 0.0002 s/iter. Total: 0.0319 s/iter. ETA=0:01:57
[32m[10/13 01:44:05 d2.evaluation.evaluator]: [0mInference done 1424/4952. Dataloading: 0.0018 s/iter. Inference: 0.0296 s/iter. Eval: 0.0002 s/iter. Total: 0.0320 s/iter. ETA=0:01:53
[32m[10/13 01:44:10 d2.evaluation.evaluator]: [0mInference done 1584/4952. Dataloading: 0.0018 s/iter. Inference: 0.0295 s/iter. Eval: 0.0002 s/iter. Total: 0.0320 s/iter. ETA=0:01:47
[32m[10/13 01:44:15 d2.evaluation.evaluator]: [0mInference done 1747/4952. Dataloading: 0.0018 s/iter. Inference: 0.0294 s/iter. Eval: 0.0002 s/iter. Total: 0.0319 s/iter. ETA=0:01:42
[32m[10/13 01:44:20 d2.evaluation.evaluator]: [0mInference done 1906/4952. Dataloading: 0.0018 s/iter. Inference: 0.0294 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:01:36
[32m[10/13 01:44:25 d2.evaluation.evaluator]: [0mInference done 2063/4952. Dataloading: 0.0018 s/iter. Inference: 0.0294 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:01:31
[32m[10/13 01:44:30 d2.evaluation.evaluator]: [0mInference done 2211/4952. Dataloading: 0.0020 s/iter. Inference: 0.0294 s/iter. Eval: 0.0002 s/iter. Total: 0.0320 s/iter. ETA=0:01:27
[32m[10/13 01:44:35 d2.evaluation.evaluator]: [0mInference done 2368/4952. Dataloading: 0.0019 s/iter. Inference: 0.0294 s/iter. Eval: 0.0002 s/iter. Total: 0.0320 s/iter. ETA=0:01:22
[32m[10/13 01:44:40 d2.evaluation.evaluator]: [0mInference done 2531/4952. Dataloading: 0.0019 s/iter. Inference: 0.0293 s/iter. Eval: 0.0002 s/iter. Total: 0.0319 s/iter. ETA=0:01:17
[32m[10/13 01:44:45 d2.evaluation.evaluator]: [0mInference done 2691/4952. Dataloading: 0.0019 s/iter. Inference: 0.0293 s/iter. Eval: 0.0002 s/iter. Total: 0.0319 s/iter. ETA=0:01:12
[32m[10/13 01:44:50 d2.evaluation.evaluator]: [0mInference done 2852/4952. Dataloading: 0.0019 s/iter. Inference: 0.0293 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:01:06
[32m[10/13 01:44:55 d2.evaluation.evaluator]: [0mInference done 3012/4952. Dataloading: 0.0019 s/iter. Inference: 0.0293 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:01:01
[32m[10/13 01:45:00 d2.evaluation.evaluator]: [0mInference done 3170/4952. Dataloading: 0.0019 s/iter. Inference: 0.0293 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:00:56
[32m[10/13 01:45:05 d2.evaluation.evaluator]: [0mInference done 3326/4952. Dataloading: 0.0019 s/iter. Inference: 0.0293 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:00:51
[32m[10/13 01:45:10 d2.evaluation.evaluator]: [0mInference done 3483/4952. Dataloading: 0.0019 s/iter. Inference: 0.0293 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:00:46
[32m[10/13 01:45:15 d2.evaluation.evaluator]: [0mInference done 3641/4952. Dataloading: 0.0019 s/iter. Inference: 0.0293 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:00:41
[32m[10/13 01:45:20 d2.evaluation.evaluator]: [0mInference done 3801/4952. Dataloading: 0.0019 s/iter. Inference: 0.0293 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:00:36
[32m[10/13 01:45:25 d2.evaluation.evaluator]: [0mInference done 3961/4952. Dataloading: 0.0019 s/iter. Inference: 0.0293 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:00:31
[32m[10/13 01:45:30 d2.evaluation.evaluator]: [0mInference done 4118/4952. Dataloading: 0.0019 s/iter. Inference: 0.0293 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:00:26
[32m[10/13 01:45:35 d2.evaluation.evaluator]: [0mInference done 4276/4952. Dataloading: 0.0019 s/iter. Inference: 0.0293 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:00:21
[32m[10/13 01:45:40 d2.evaluation.evaluator]: [0mInference done 4432/4952. Dataloading: 0.0019 s/iter. Inference: 0.0293 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:00:16
[32m[10/13 01:45:45 d2.evaluation.evaluator]: [0mInference done 4593/4952. Dataloading: 0.0019 s/iter. Inference: 0.0293 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:00:11
[32m[10/13 01:45:50 d2.evaluation.evaluator]: [0mInference done 4748/4952. Dataloading: 0.0019 s/iter. Inference: 0.0293 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:00:06
[32m[10/13 01:45:55 d2.evaluation.evaluator]: [0mInference done 4909/4952. Dataloading: 0.0019 s/iter. Inference: 0.0293 s/iter. Eval: 0.0002 s/iter. Total: 0.0318 s/iter. ETA=0:00:01
[32m[10/13 01:45:56 d2.evaluation.evaluator]: [0mTotal inference time: 0:02:37.271658 (0.031791 s / iter per device, on 1 devices)
[32m[10/13 01:45:56 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:02:24 (0.029246 s / iter per device, on 1 devices)
[32m[10/13 01:45:57 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[10/13 01:45:57 d2.evaluation.coco_evaluation]: [0mSaving results to ./results/COCO/frcnn/frcnn_r50_fpn_COCO_numfc4/inference/coco_instances_results.json
[32m[10/13 01:45:58 d2.evaluation.coco_evaluation]: [0mEvaluating predictions with official COCO API...
Loading and preparing results...
DONE (t=0.70s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=18.50s).
Accumulating evaluation results...
DONE (t=3.88s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.270
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.437
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.289
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.169
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.310
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.340
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.296
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.468
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.493
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.311
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.525
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.616
[32m[10/13 01:46:21 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 27.009 | 43.728 | 28.947 | 16.906 | 30.972 | 34.046 |
[32m[10/13 01:46:21 d2.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category      | AP     | category     | AP     | category       | AP     |
|:--------------|:-------|:-------------|:-------|:---------------|:-------|
| person        | 32.130 | bicycle      | 17.889 | car            | 22.269 |
| motorcycle    | 25.737 | airplane     | 53.674 | bus            | 43.124 |
| train         | 40.277 | truck        | 18.720 | boat           | 16.927 |
| traffic light | 18.653 | fire hydrant | 43.004 | stop sign      | 55.971 |
| parking meter | 45.246 | bench        | 14.198 | bird           | 26.822 |
| cat           | 46.999 | dog          | 41.308 | horse          | 36.783 |
| sheep         | 40.482 | cow          | 44.993 | elephant       | 52.845 |
| bear          | 62.670 | zebra        | 57.451 | giraffe        | 58.532 |
| backpack      | 9.116  | umbrella     | 20.260 | handbag        | 6.459  |
| tie           | 15.405 | suitcase     | 21.493 | frisbee        | 48.552 |
| skis          | 16.988 | snowboard    | 18.802 | sports ball    | 35.419 |
| kite          | 27.372 | baseball bat | 13.141 | baseball glove | 19.721 |
| skateboard    | 29.363 | surfboard    | 23.206 | tennis racket  | 26.105 |
| bottle        | 19.386 | wine glass   | 21.025 | cup            | 21.092 |
| fork          | 14.434 | knife        | 7.926  | spoon          | 5.753  |
| bowl          | 24.315 | banana       | 12.422 | apple          | 12.653 |
| sandwich      | 22.469 | orange       | 21.296 | broccoli       | 15.182 |
| carrot        | 14.442 | hot dog      | 29.096 | pizza          | 34.060 |
| donut         | 35.916 | cake         | 13.769 | chair          | 14.347 |
| couch         | 23.334 | potted plant | 12.477 | bed            | 29.211 |
| dining table  | 13.384 | toilet       | 40.663 | tv             | 27.353 |
| laptop        | 26.839 | mouse        | 41.769 | remote         | 15.810 |
| keyboard      | 26.433 | cell phone   | 25.310 | microwave      | 44.495 |
| oven          | 20.052 | toaster      | 33.565 | sink           | 26.621 |
| refrigerator  | 37.505 | book         | 5.615  | clock          | 41.458 |
| vase          | 24.172 | scissors     | 15.285 | teddy bear     | 34.792 |
| hair drier    | 0.000  | toothbrush   | 6.868  |                |        |
[32m[10/13 01:46:22 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[10/13 01:46:22 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[10/13 01:46:22 d2.evaluation.testing]: [0mcopypaste: 27.0087,43.7284,28.9473,16.9060,30.9716,34.0459


Job done.
Date:  gio 13 ott 2022, 01.47.07, CEST
