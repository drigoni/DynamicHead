
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
Date:  mer 19 ott 2022, 18.01.49, CEST
Directory:  /ceph/hpc/home/eudavider/repository/DynamicHead
Nodelist:  gn28
Number of nodes:  1
Ntasks per node:  1
NGPUs per node:  2
CUDA_VISIBLE_DEVICES:  0,1
TORCH_DEVICE_COUNT:  2
SLURM_MASTER_PORT:  15583
SLURM_MASTER_NODE:  gn04
SLURM_MASTER_ADDR:  gn04
SLURM_MASTER_URL:  tcp://gn04:15583
--------------------------------------------- 
MODEL_NUM_GPUS:  2
MODEL_NUM_MACHINES:  1
MODEL_BATCH_SIZE:  16
MODEL_MAX_ITER:  90000
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 

srun: error: WARNING: Multiple leaf switches contain nodes: gn[01-60]
TORCH_DEVICE_COUNT:  2
SLURM_MASTER_PORT:  15599
SLURM_MASTER_NODE:  gn28
SLURM_MASTER_ADDR:  gn28
SLURM_MASTER_URL:  tcp://gn28:15599
--------------------------------------------- 
MODEL_NUM_GPUS:  2
MODEL_NUM_MACHINES:  1
MODEL_BATCH_SIZE:  16
MODEL_MAX_ITER:  90000
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 

srun: error: WARNING: Multiple leaf switches contain nodes: gn[01-60]
[nltk_data] Downloading package omw-1.4 to
[nltk_data] Downloading package omw-1.4 to
tk_data...
[nltk_data]   Package omw-1.4 is already up-to-date!

[nltk_data]   Package omw-1.4 is already up-to-date!
[nltk_data]     /ceph/hpc/home/eudavider/nltk_data...
[nltk_data]     /ceph/hpc/home/eudavider/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
OCO/retinanet/r50/retinanet_r50_fpn_COCO_concepts_train_cat_depth4.yaml', resume=False, eval_only=False, num_gpus=2, num_machines=1, machine_rank=0, dist_url='tcp://gn04:15583', opts=['SOLVER.IMS_PER_BATCH', '16', 'SOLVER.MAX_ITER', '90000'])
Command Line Args: Namespace(config_file='./configs/COCO/retinanet/r50/retinanet_r50_fpn_COCO_concepts_train_cat_depth4.yaml', resume=False, eval_only=False, num_gpus=2, num_machines=1, machine_rank=0, dist_url='tcp://gn28:15599', opts=['SOLVER.IMS_PER_BATCH', '16', 'SOLVER.MAX_ITER', '90000'])
slurmstepd: error: *** STEP 48115583.0 ON gn04 CANCELLED AT 2022-10-19T18:02:23 ***
slurmstepd: error: *** JOB 48115583 ON gn04 CANCELLED AT 2022-10-19T18:02:23 ***
Loading config ./configs/COCO/retinanet/r50/../base_retinanet_COCO_concepts.yaml with yaml.unsafe_load. Your machine may be at risk if the file contains malicious content.
Loading config ./configs/COCO/retinanet/r50/../base_retinanet_COCO_concepts.yaml with yaml.unsafe_load. Your machine may be at risk if the file contains malicious content.
[32m[10/19 18:02:25 detectron2]: [0mRank of current process: 0. World size: 2
[32m[10/19 18:02:28 detectron2]: [0mEnvironment info:
----------------------  ------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.9.13 | packaged by conda-forge | (main, May 27 2022, 16:56:21) [GCC 10.3.0]
numpy                   1.23.1
detectron2              0.6 @/ceph/hpc/home/eudavider/.local/lib/python3.9/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5, 8.0, 8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/ceph/hpc/home/eudavider/.conda/envs/dynamicHead/lib/python3.9/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1                 NVIDIA A100-SXM4-40GB (arch=8.0)
Driver version          510.47.03
CUDA_HOME               /usr/local/cuda
Pillow                  9.2.0
torchvision             0.11.0 @/ceph/hpc/home/eudavider/.conda/envs/dynamicHead/lib/python3.9/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20220512
iopath                  0.1.9
cv2                     Not found
----------------------  ------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[32m[10/19 18:02:28 detectron2]: [0mCommand line arguments: Namespace(config_file='./configs/COCO/retinanet/r50/retinanet_r50_fpn_COCO_concepts_train_cat_depth4.yaml', resume=False, eval_only=False, num_gpus=2, num_machines=1, machine_rank=0, dist_url='tcp://gn28:15599', opts=['SOLVER.IMS_PER_BATCH', '16', 'SOLVER.MAX_ITER', '90000'])
[32m[10/19 18:02:28 detectron2]: [0mContents of args.config_file=./configs/COCO/retinanet/r50/retinanet_r50_fpn_COCO_concepts_train_cat_depth4.yaml:
_BASE_: "../base_retinanet_COCO_concepts.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  MASK_ON: False
  RESNETS:
    DEPTH: 50
CONCEPT:
  CONCEPT_FUSION: "cat" # ["cat", "mul", "add", "zeros"]
  DEPTH: 4
OUTPUT_DIR: "./results/COCO/retinanet/retinanet_r50_fpn_COCO_concepts_cat_depth4/"
[32m[10/19 18:02:28 detectron2]: [0mRunning with full config:
CONCEPT:
  APPLY_CONDITION: true
  APPLY_CONDITION_FROM_FILE: false
  ACTIVATE_CONCEPT_GENERATOR: true
  CONCEPT_FUSION: cat
  DEPTH: 4
  EXTERNAL_CONCEPTS_FOLDER: ./datasets/ewiser_concepts_COCO_valid/
  FILE: ./concept/coco_to_synset.json
  ONLY_NAME: true
  UNIQUE: true
  VOCAB: ./concept/vocab.json
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 32
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_2017_tuning_val
  TRAIN:
  - coco_2017_tuning_train
DEEPSETS:
  AGGREGATE: sum
  EMB: wordnet
  EMB_DIM: 150
  FILE: ./concept/wn30_holE_500_150_0.1_0.2_embeddings.pickle
  FREEZE: false
  MLP1_LAYERS:
  - 150
  - 256
  MLP1_OUTPUT_DIM: 256
  MLP2_LAYERS:
  - 256
  - 256
  OUTPUT_DIM: 256
EVALUATOR_TYPE: default
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 40.31747359663594
      - 50.79683366298238
    - - 64
      - 80.63494719327188
      - 101.59366732596476
    - - 128
      - 161.26989438654377
      - 203.18733465192952
    - - 256
      - 322.53978877308754
      - 406.37466930385904
    - - 512
      - 645.0795775461751
      - 812.7493386077181
  ATSS:
    BBOX_REG_WEIGHTS:
    - 10.0
    - 10.0
    - 5.0
    - 5.0
    CHANNELS: 256
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    INFERENCE_TH: 0.05
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_TH: 0.6
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    REG_LOSS_WEIGHT: 2.0
    TOPK: 9
    USE_GN: true
  BACKBONE:
    FREEZE_AT: -1
    NAME: build_retinanet_resnet_fpn_backbone
  DEVICE: cuda
  DYHEAD:
    CHANNELS: 256
    NUM_CONVS: 6
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: ConceptRetinaNet
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.0
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  SWINT:
    APE: false
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.2
    EMBED_DIM: 96
    MLP_RATIO: 4
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - stage2
    - stage3
    - stage4
    - stage5
    OUT_NORM: true
    VERSION: 1
    WINDOW_SIZE: 7
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-50.pkl
OUTPUT_DIR: ./results/COCO/retinanet/retinanet_r50_fpn_COCO_concepts_cat_depth4/
SEED: 2022
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: false
  OPTIMIZER: SGD
  REFERENCE_WORLD_SIZE: 0
  STEPS:
  - 60000
  - 80000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[32m[10/19 18:02:28 detectron2]: [0mFull config saved to ./results/COCO/retinanet/retinanet_r50_fpn_COCO_concepts_cat_depth4/config.yaml
wandb: Currently logged in as: drigoni. Use `wandb login --relogin` to force relogin
wandb: Tracking run with wandb version 0.13.4
wandb: Run data is saved locally in /ceph/hpc/scratch/user/eudavider/repository/DynamicHead/wandb/run-20221019_180230-3fi27jvn
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run sunny-disco-355
wandb: ⭐️ View project at https://wandb.ai/drigoni/CATSS
wandb: 🚀 View run at https://wandb.ai/drigoni/CATSS/runs/3fi27jvn
Load concept for each category. 
Loading pre-trained concepts embeddings. 
Vocab initialization with 0/82115 elements not found. 
[32m[10/19 18:07:37 d2.engine.defaults]: [0mModel:
ConceptRetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(512, 720, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(512, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
  (concept_net): ConceptNet(
    (concept_vocab): Vocab()
    (concept_emb): Embedding(82115, 150)
    (deepset): _DeepSets(
      (mlp1): MLP(
        (layers): ModuleList(
          (0): Linear(in_features=150, out_features=150, bias=True)
          (1): Linear(in_features=150, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mlp2): MLP(
        (layers): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=True)
          (1): Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=256, bias=True)
        )
      )
    )
  )
)
[32m[10/19 18:07:50 d2.data.datasets.coco]: [0mLoading datasets/tuning_coco/annotations/tuning_instances_train2017.json takes 13.15 seconds.
[32m[10/19 18:07:51 d2.data.datasets.coco]: [0mLoaded 113287 images in COCO format from datasets/tuning_coco/annotations/tuning_instances_train2017.json
[32m[10/19 18:07:56 d2.data.build]: [0mRemoved 977 images with no usable annotations. 112310 images left.
[32m[10/19 18:08:01 d2.data.build]: [0mDistribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 246754       |   bicycle    | 6793         |      car      | 41810        |
|  motorcycle   | 8317         |   airplane   | 4913         |      bus      | 5830         |
|     train     | 4362         |    truck     | 9530         |     boat      | 10105        |
| traffic light | 12259        | fire hydrant | 1781         |   stop sign   | 1901         |
| parking meter | 1249         |    bench     | 9469         |     bird      | 9996         |
|      cat      | 4573         |     dog      | 5255         |     horse     | 6260         |
|     sheep     | 8875         |     cow      | 7721         |   elephant    | 5221         |
|     bear      | 1241         |    zebra     | 5041         |    giraffe    | 4916         |
|   backpack    | 8316         |   umbrella   | 10787        |    handbag    | 11816        |
|      tie      | 6162         |   suitcase   | 5841         |    frisbee    | 2581         |
|     skis      | 6333         |  snowboard   | 2597         |  sports ball  | 6052         |
|     kite      | 8489         | baseball bat | 3123         | baseball gl.. | 3578         |
|  skateboard   | 5325         |  surfboard   | 5872         | tennis racket | 4595         |
|    bottle     | 23085        |  wine glass  | 7455         |      cup      | 19785        |
|     fork      | 5265         |    knife     | 7469         |     spoon     | 5907         |
|     bowl      | 13643        |    banana    | 8796         |     apple     | 5586         |
|   sandwich    | 4170         |    orange    | 6021         |   broccoli    | 6943         |
|    carrot     | 7441         |   hot dog    | 2780         |     pizza     | 5581         |
|     donut     | 6728         |     cake     | 5985         |     chair     | 36370        |
|     couch     | 5551         | potted plant | 8253         |      bed      | 4005         |
| dining table  | 15055        |    toilet    | 3980         |      tv       | 5563         |
|    laptop     | 4762         |    mouse     | 2179         |    remote     | 5450         |
|   keyboard    | 2735         |  cell phone  | 6132         |   microwave   | 1603         |
|     oven      | 3195         |   toaster    | 216          |     sink      | 5413         |
| refrigerator  | 2515         |     book     | 23082        |     clock     | 6061         |
|     vase      | 6271         |   scissors   | 1344         |  teddy bear   | 4538         |
|  hair drier   | 193          |  toothbrush  | 1870         |               |              |
|     total     | 814615       |              |              |               |              |[0m
[32m[10/19 18:08:01 d2.data.common]: [0mSerializing 112310 elements to byte tensors and concatenating them all ...
[32m[10/19 18:08:03 d2.data.common]: [0mSerialized dataset takes 432.33 MiB
[32m[10/19 18:08:04 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from ./results/COCO/retinanet/retinanet_r50_fpn_COCO_concepts_cat_depth4/model_final.pth ...
[32m[10/19 18:09:08 fvcore.common.checkpoint]: [0mLoading optimizer from ./results/COCO/retinanet/retinanet_r50_fpn_COCO_concepts_cat_depth4/model_final.pth ...
[32m[10/19 18:09:08 fvcore.common.checkpoint]: [0mLoading scheduler from ./results/COCO/retinanet/retinanet_r50_fpn_COCO_concepts_cat_depth4/model_final.pth ...
[32m[10/19 18:09:08 d2.engine.train_loop]: [0mStarting training from iteration 90000
[32m[10/19 18:09:08 d2.engine.hooks]: [0mTotal training time: 0:00:00 (0:00:00 on hooks)
Load concept for each category. 
[32m[10/19 18:09:09 d2.data.datasets.coco]: [0mLoaded 5000 images in COCO format from datasets/tuning_coco/annotations/tuning_instances_val2017.json
[32m[10/19 18:09:09 d2.data.build]: [0mRemoved 44 images with no usable annotations. 4956 images left.
[32m[10/19 18:09:09 d2.data.build]: [0mDistribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 10499        |   bicycle    | 263          |      car      | 1723         |
|  motorcycle   | 337          |   airplane   | 216          |      bus      | 231          |
|     train     | 208          |    truck     | 440          |     boat      | 471          |
| traffic light | 583          | fire hydrant | 84           |   stop sign   | 82           |
| parking meter | 34           |    bench     | 351          |     bird      | 546          |
|      cat      | 193          |     dog      | 245          |     horse     | 307          |
|     sheep     | 348          |     cow      | 293          |   elephant    | 263          |
|     bear      | 53           |    zebra     | 228          |    giraffe    | 212          |
|   backpack    | 398          |   umbrella   | 478          |    handbag    | 526          |
|      tie      | 286          |   suitcase   | 271          |    frisbee    | 100          |
|     skis      | 290          |  snowboard   | 84           |  sports ball  | 247          |
|     kite      | 313          | baseball bat | 150          | baseball gl.. | 169          |
|  skateboard   | 211          |  surfboard   | 223          | tennis racket | 212          |
|    bottle     | 985          |  wine glass  | 384          |      cup      | 789          |
|     fork      | 209          |    knife     | 291          |     spoon     | 252          |
|     bowl      | 680          |    banana    | 399          |     apple     | 190          |
|   sandwich    | 186          |    orange    | 281          |   broccoli    | 318          |
|    carrot     | 317          |   hot dog    | 104          |     pizza     | 226          |
|     donut     | 277          |     cake     | 311          |     chair     | 1703         |
|     couch     | 228          | potted plant | 378          |      bed      | 187          |
| dining table  | 640          |    toilet    | 169          |      tv       | 240          |
|    laptop     | 198          |    mouse     | 82           |    remote     | 250          |
|   keyboard    | 119          |  cell phone  | 290          |   microwave   | 69           |
|     oven      | 139          |   toaster    | 9            |     sink      | 196          |
| refrigerator  | 119          |     book     | 995          |     clock     | 259          |
|     vase      | 306          |   scissors   | 120          |  teddy bear   | 191          |
|  hair drier   | 5            |  toothbrush  | 75           |               |              |
|     total     | 35334        |              |              |               |              |[0m
[32m[10/19 18:09:09 d2.data.common]: [0mSerializing 4956 elements to byte tensors and concatenating them all ...
[32m[10/19 18:09:09 d2.data.common]: [0mSerialized dataset takes 18.88 MiB
[5m[31mWARNING[0m [32m[10/19 18:09:09 d2.evaluation.coco_evaluation]: [0mCOCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[32m[10/19 18:09:09 d2.evaluation.evaluator]: [0mStart inference on 2478 batches
Load concept for each category. 
Loading pre-trained concepts embeddings. 
Vocab initialization with 0/82115 elements not found. 
Load concept for each category. 
/ceph/hpc/home/eudavider/.local/lib/python3.9/site-packages/detectron2/structures/image_list.py:88: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  max_size = (max_size + (stride - 1)) // stride * stride
/ceph/hpc/home/eudavider/.local/lib/python3.9/site-packages/detectron2/structures/image_list.py:88: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  max_size = (max_size + (stride - 1)) // stride * stride
/ceph/hpc/home/eudavider/.conda/envs/dynamicHead/lib/python3.9/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1634272164809/work/aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
/ceph/hpc/home/eudavider/.conda/envs/dynamicHead/lib/python3.9/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1634272164809/work/aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
[32m[10/19 18:10:27 d2.evaluation.evaluator]: [0mInference done 11/2478. Dataloading: 0.0013 s/iter. Inference: 0.0454 s/iter. Eval: 0.0002 s/iter. Total: 0.0470 s/iter. ETA=0:01:55
[32m[10/19 18:10:32 d2.evaluation.evaluator]: [0mInference done 133/2478. Dataloading: 0.0019 s/iter. Inference: 0.0391 s/iter. Eval: 0.0002 s/iter. Total: 0.0414 s/iter. ETA=0:01:37
[32m[10/19 18:10:37 d2.evaluation.evaluator]: [0mInference done 261/2478. Dataloading: 0.0018 s/iter. Inference: 0.0382 s/iter. Eval: 0.0002 s/iter. Total: 0.0403 s/iter. ETA=0:01:29
[32m[10/19 18:10:42 d2.evaluation.evaluator]: [0mInference done 380/2478. Dataloading: 0.0019 s/iter. Inference: 0.0387 s/iter. Eval: 0.0002 s/iter. Total: 0.0409 s/iter. ETA=0:01:25
[32m[10/19 18:10:47 d2.evaluation.evaluator]: [0mInference done 504/2478. Dataloading: 0.0019 s/iter. Inference: 0.0386 s/iter. Eval: 0.0002 s/iter. Total: 0.0408 s/iter. ETA=0:01:20
[32m[10/19 18:10:52 d2.evaluation.evaluator]: [0mInference done 623/2478. Dataloading: 0.0019 s/iter. Inference: 0.0389 s/iter. Eval: 0.0002 s/iter. Total: 0.0411 s/iter. ETA=0:01:16
[32m[10/19 18:10:57 d2.evaluation.evaluator]: [0mInference done 744/2478. Dataloading: 0.0018 s/iter. Inference: 0.0390 s/iter. Eval: 0.0002 s/iter. Total: 0.0411 s/iter. ETA=0:01:11
[32m[10/19 18:11:02 d2.evaluation.evaluator]: [0mInference done 860/2478. Dataloading: 0.0019 s/iter. Inference: 0.0393 s/iter. Eval: 0.0002 s/iter. Total: 0.0414 s/iter. ETA=0:01:07
[32m[10/19 18:11:07 d2.evaluation.evaluator]: [0mInference done 959/2478. Dataloading: 0.0020 s/iter. Inference: 0.0401 s/iter. Eval: 0.0002 s/iter. Total: 0.0424 s/iter. ETA=0:01:04
[32m[10/19 18:11:12 d2.evaluation.evaluator]: [0mInference done 1082/2478. Dataloading: 0.0020 s/iter. Inference: 0.0399 s/iter. Eval: 0.0002 s/iter. Total: 0.0422 s/iter. ETA=0:00:58
[32m[10/19 18:11:17 d2.evaluation.evaluator]: [0mInference done 1200/2478. Dataloading: 0.0020 s/iter. Inference: 0.0400 s/iter. Eval: 0.0002 s/iter. Total: 0.0422 s/iter. ETA=0:00:53
[32m[10/19 18:11:22 d2.evaluation.evaluator]: [0mInference done 1301/2478. Dataloading: 0.0020 s/iter. Inference: 0.0405 s/iter. Eval: 0.0003 s/iter. Total: 0.0428 s/iter. ETA=0:00:50
[32m[10/19 18:11:27 d2.evaluation.evaluator]: [0mInference done 1391/2478. Dataloading: 0.0022 s/iter. Inference: 0.0411 s/iter. Eval: 0.0003 s/iter. Total: 0.0437 s/iter. ETA=0:00:47
[32m[10/19 18:11:32 d2.evaluation.evaluator]: [0mInference done 1517/2478. Dataloading: 0.0022 s/iter. Inference: 0.0408 s/iter. Eval: 0.0003 s/iter. Total: 0.0433 s/iter. ETA=0:00:41
[32m[10/19 18:11:37 d2.evaluation.evaluator]: [0mInference done 1639/2478. Dataloading: 0.0022 s/iter. Inference: 0.0407 s/iter. Eval: 0.0003 s/iter. Total: 0.0432 s/iter. ETA=0:00:36
[32m[10/19 18:11:42 d2.evaluation.evaluator]: [0mInference done 1762/2478. Dataloading: 0.0022 s/iter. Inference: 0.0405 s/iter. Eval: 0.0003 s/iter. Total: 0.0430 s/iter. ETA=0:00:30
[32m[10/19 18:11:47 d2.evaluation.evaluator]: [0mInference done 1876/2478. Dataloading: 0.0022 s/iter. Inference: 0.0406 s/iter. Eval: 0.0003 s/iter. Total: 0.0431 s/iter. ETA=0:00:25
[32m[10/19 18:11:52 d2.evaluation.evaluator]: [0mInference done 1998/2478. Dataloading: 0.0022 s/iter. Inference: 0.0404 s/iter. Eval: 0.0003 s/iter. Total: 0.0430 s/iter. ETA=0:00:20
[32m[10/19 18:11:57 d2.evaluation.evaluator]: [0mInference done 2125/2478. Dataloading: 0.0022 s/iter. Inference: 0.0403 s/iter. Eval: 0.0003 s/iter. Total: 0.0428 s/iter. ETA=0:00:15
[32m[10/19 18:12:02 d2.evaluation.evaluator]: [0mInference done 2228/2478. Dataloading: 0.0022 s/iter. Inference: 0.0405 s/iter. Eval: 0.0003 s/iter. Total: 0.0430 s/iter. ETA=0:00:10
[32m[10/19 18:12:07 d2.evaluation.evaluator]: [0mInference done 2333/2478. Dataloading: 0.0022 s/iter. Inference: 0.0407 s/iter. Eval: 0.0003 s/iter. Total: 0.0432 s/iter. ETA=0:00:06
[32m[10/19 18:12:12 d2.evaluation.evaluator]: [0mInference done 2455/2478. Dataloading: 0.0022 s/iter. Inference: 0.0406 s/iter. Eval: 0.0003 s/iter. Total: 0.0431 s/iter. ETA=0:00:00
[32m[10/19 18:12:16 d2.evaluation.evaluator]: [0mTotal inference time: 0:01:50.187678 (0.044556 s / iter per device, on 2 devices)
[32m[10/19 18:12:16 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:01:40 (0.040546 s / iter per device, on 2 devices)
[32m[10/19 18:12:31 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[10/19 18:12:31 d2.evaluation.coco_evaluation]: [0mSaving results to ./results/COCO/retinanet/retinanet_r50_fpn_COCO_concepts_cat_depth4/inference/coco_instances_results.json
[32m[10/19 18:12:32 d2.evaluation.coco_evaluation]: [0mEvaluating predictions with official COCO API...
Loading and preparing results...
DONE (t=1.46s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=31.02s).
Accumulating evaluation results...
DONE (t=5.66s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.340
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.514
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.364
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.196
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.368
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.431
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.300
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.482
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.519
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.326
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.551
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.676
[32m[10/19 18:13:10 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 34.003 | 51.376 | 36.365 | 19.622 | 36.813 | 43.096 |
[32m[10/19 18:13:10 d2.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category      | AP     | category     | AP     | category       | AP     |
|:--------------|:-------|:-------------|:-------|:---------------|:-------|
| person        | 39.297 | bicycle      | 24.784 | car            | 29.985 |
| motorcycle    | 37.847 | airplane     | 51.437 | bus            | 49.639 |
| train         | 49.875 | truck        | 31.127 | boat           | 19.141 |
| traffic light | 21.253 | fire hydrant | 63.867 | stop sign      | 73.161 |
| parking meter | 39.546 | bench        | 19.398 | bird           | 29.471 |
| cat           | 50.264 | dog          | 54.825 | horse          | 51.690 |
| sheep         | 50.751 | cow          | 49.784 | elephant       | 63.599 |
| bear          | 70.077 | zebra        | 63.922 | giraffe        | 68.463 |
| backpack      | 13.661 | umbrella     | 27.297 | handbag        | 12.066 |
| tie           | 28.008 | suitcase     | 32.179 | frisbee        | 61.835 |
| skis          | 15.281 | snowboard    | 16.185 | sports ball    | 35.831 |
| kite          | 41.845 | baseball bat | 22.463 | baseball glove | 28.003 |
| skateboard    | 38.155 | surfboard    | 27.848 | tennis racket  | 37.391 |
| bottle        | 27.065 | wine glass   | 27.323 | cup            | 29.164 |
| fork          | 19.363 | knife        | 13.013 | spoon          | 9.443  |
| bowl          | 31.785 | banana       | 19.124 | apple          | 16.039 |
| sandwich      | 24.258 | orange       | 23.793 | broccoli       | 23.455 |
| carrot        | 17.453 | hot dog      | 30.015 | pizza          | 50.090 |
| donut         | 51.269 | cake         | 35.372 | chair          | 17.285 |
| couch         | 30.914 | potted plant | 22.597 | bed            | 38.712 |
| dining table  | 24.493 | toilet       | 55.964 | tv             | 40.283 |
| laptop        | 47.142 | mouse        | 37.988 | remote         | 19.682 |
| keyboard      | 34.245 | cell phone   | 26.263 | microwave      | 43.608 |
| oven          | 22.655 | toaster      | 36.808 | sink           | 27.992 |
| refrigerator  | 37.550 | book         | 8.754  | clock          | 47.650 |
| vase          | 35.999 | scissors     | 17.388 | teddy bear     | 35.402 |
| hair drier    | 0.721  | toothbrush   | 20.852 |                |        |
[32m[10/19 18:13:11 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[10/19 18:13:11 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[10/19 18:13:11 d2.evaluation.testing]: [0mcopypaste: 34.0028,51.3756,36.3654,19.6215,36.8132,43.0956
[32m[10/19 18:13:11 d2.utils.events]: [0m iter: 90001    lr: N/A  max_mem: 1015M
wandb: Waiting for W&B process to finish... (success).
wandb: 
wandb: Run history:
wandb:                bbox/AP ▁
wandb:       bbox/AP-airplane ▁
wandb:          bbox/AP-apple ▁
wandb:       bbox/AP-backpack ▁
wandb:         bbox/AP-banana ▁
wandb:   bbox/AP-baseball bat ▁
wandb: bbox/AP-baseball glove ▁
wandb:           bbox/AP-bear ▁
wandb:            bbox/AP-bed ▁
wandb:          bbox/AP-bench ▁
wandb:        bbox/AP-bicycle ▁
wandb:           bbox/AP-bird ▁
wandb:           bbox/AP-boat ▁
wandb:           bbox/AP-book ▁
wandb:         bbox/AP-bottle ▁
wandb:           bbox/AP-bowl ▁
wandb:       bbox/AP-broccoli ▁
wandb:            bbox/AP-bus ▁
wandb:           bbox/AP-cake ▁
wandb:            bbox/AP-car ▁
wandb:         bbox/AP-carrot ▁
wandb:            bbox/AP-cat ▁
wandb:     bbox/AP-cell phone ▁
wandb:          bbox/AP-chair ▁
wandb:          bbox/AP-clock ▁
wandb:          bbox/AP-couch ▁
wandb:            bbox/AP-cow ▁
wandb:            bbox/AP-cup ▁
wandb:   bbox/AP-dining table ▁
wandb:            bbox/AP-dog ▁
wandb:          bbox/AP-donut ▁
wandb:       bbox/AP-elephant ▁
wandb:   bbox/AP-fire hydrant ▁
wandb:           bbox/AP-fork ▁
wandb:        bbox/AP-frisbee ▁
wandb:        bbox/AP-giraffe ▁
wandb:     bbox/AP-hair drier ▁
wandb:        bbox/AP-handbag ▁
wandb:          bbox/AP-horse ▁
wandb:        bbox/AP-hot dog ▁
wandb:       bbox/AP-keyboard ▁
wandb:           bbox/AP-kite ▁
wandb:          bbox/AP-knife ▁
wandb:         bbox/AP-laptop ▁
wandb:      bbox/AP-microwave ▁
wandb:     bbox/AP-motorcycle ▁
wandb:          bbox/AP-mouse ▁
wandb:         bbox/AP-orange ▁
wandb:           bbox/AP-oven ▁
wandb:  bbox/AP-parking meter ▁
wandb:         bbox/AP-person ▁
wandb:          bbox/AP-pizza ▁
wandb:   bbox/AP-potted plant ▁
wandb:   bbox/AP-refrigerator ▁
wandb:         bbox/AP-remote ▁
wandb:       bbox/AP-sandwich ▁
wandb:       bbox/AP-scissors ▁
wandb:          bbox/AP-sheep ▁
wandb:           bbox/AP-sink ▁
wandb:     bbox/AP-skateboard ▁
wandb:           bbox/AP-skis ▁
wandb:      bbox/AP-snowboard ▁
wandb:          bbox/AP-spoon ▁
wandb:    bbox/AP-sports ball ▁
wandb:      bbox/AP-stop sign ▁
wandb:       bbox/AP-suitcase ▁
wandb:      bbox/AP-surfboard ▁
wandb:     bbox/AP-teddy bear ▁
wandb:  bbox/AP-tennis racket ▁
wandb:            bbox/AP-tie ▁
wandb:        bbox/AP-toaster ▁
wandb:         bbox/AP-toilet ▁
wandb:     bbox/AP-toothbrush ▁
wandb:  bbox/AP-traffic light ▁
wandb:          bbox/AP-train ▁
wandb:          bbox/AP-truck ▁
wandb:             bbox/AP-tv ▁
wandb:       bbox/AP-umbrella ▁
wandb:           bbox/AP-vase ▁
wandb:     bbox/AP-wine glass ▁
wandb:          bbox/AP-zebra ▁
wandb:              bbox/AP50 ▁
wandb:              bbox/AP75 ▁
wandb:               bbox/APl ▁
wandb:               bbox/APm ▁
wandb:               bbox/APs ▁
wandb:            global_step ▁
wandb: 
wandb: Run summary:
wandb:                bbox/AP 34.00275
wandb:       bbox/AP-airplane 51.43674
wandb:          bbox/AP-apple 16.0389
wandb:       bbox/AP-backpack 13.66138
wandb:         bbox/AP-banana 19.12408
wandb:   bbox/AP-baseball bat 22.46348
wandb: bbox/AP-baseball glove 28.00285
wandb:           bbox/AP-bear 70.07694
wandb:            bbox/AP-bed 38.71211
wandb:          bbox/AP-bench 19.39802
wandb:        bbox/AP-bicycle 24.78428
wandb:           bbox/AP-bird 29.47066
wandb:           bbox/AP-boat 19.14086
wandb:           bbox/AP-book 8.75398
wandb:         bbox/AP-bottle 27.06453
wandb:           bbox/AP-bowl 31.78543
wandb:       bbox/AP-broccoli 23.45509
wandb:            bbox/AP-bus 49.63861
wandb:           bbox/AP-cake 35.37178
wandb:            bbox/AP-car 29.98485
wandb:         bbox/AP-carrot 17.45319
wandb:            bbox/AP-cat 50.26444
wandb:     bbox/AP-cell phone 26.26317
wandb:          bbox/AP-chair 17.28486
wandb:          bbox/AP-clock 47.64954
wandb:          bbox/AP-couch 30.9138
wandb:            bbox/AP-cow 49.78409
wandb:            bbox/AP-cup 29.16366
wandb:   bbox/AP-dining table 24.49346
wandb:            bbox/AP-dog 54.82452
wandb:          bbox/AP-donut 51.26888
wandb:       bbox/AP-elephant 63.5985
wandb:   bbox/AP-fire hydrant 63.86686
wandb:           bbox/AP-fork 19.36291
wandb:        bbox/AP-frisbee 61.8348
wandb:        bbox/AP-giraffe 68.46291
wandb:     bbox/AP-hair drier 0.72146
wandb:        bbox/AP-handbag 12.0663
wandb:          bbox/AP-horse 51.69028
wandb:        bbox/AP-hot dog 30.01467
wandb:       bbox/AP-keyboard 34.24545
wandb:           bbox/AP-kite 41.84465
wandb:          bbox/AP-knife 13.01334
wandb:         bbox/AP-laptop 47.14181
wandb:      bbox/AP-microwave 43.60798
wandb:     bbox/AP-motorcycle 37.84699
wandb:          bbox/AP-mouse 37.98763
wandb:         bbox/AP-orange 23.79269
wandb:           bbox/AP-oven 22.65475
wandb:  bbox/AP-parking meter 39.54633
wandb:         bbox/AP-person 39.2972
wandb:          bbox/AP-pizza 50.08999
wandb:   bbox/AP-potted plant 22.59735
wandb:   bbox/AP-refrigerator 37.54989
wandb:         bbox/AP-remote 19.68167
wandb:       bbox/AP-sandwich 24.25831
wandb:       bbox/AP-scissors 17.38815
wandb:          bbox/AP-sheep 50.75051
wandb:           bbox/AP-sink 27.9919
wandb:     bbox/AP-skateboard 38.15458
wandb:           bbox/AP-skis 15.28139
wandb:      bbox/AP-snowboard 16.18524
wandb:          bbox/AP-spoon 9.44315
wandb:    bbox/AP-sports ball 35.83137
wandb:      bbox/AP-stop sign 73.16079
wandb:       bbox/AP-suitcase 32.17863
wandb:      bbox/AP-surfboard 27.84774
wandb:     bbox/AP-teddy bear 35.40208
wandb:  bbox/AP-tennis racket 37.39083
wandb:            bbox/AP-tie 28.00776
wandb:        bbox/AP-toaster 36.8079
wandb:         bbox/AP-toilet 55.96359
wandb:     bbox/AP-toothbrush 20.85213
wandb:  bbox/AP-traffic light 21.25287
wandb:          bbox/AP-train 49.87495
wandb:          bbox/AP-truck 31.12674
wandb:             bbox/AP-tv 40.28306
wandb:       bbox/AP-umbrella 27.29749
wandb:           bbox/AP-vase 35.99935
wandb:     bbox/AP-wine glass 27.32329
wandb:          bbox/AP-zebra 63.92165
wandb:              bbox/AP50 51.37561
wandb:              bbox/AP75 36.36538
wandb:               bbox/APl 43.0956
wandb:               bbox/APm 36.81323
wandb:               bbox/APs 19.62151
wandb:            global_step 90001
wandb: 
wandb: Synced sunny-disco-355: https://wandb.ai/drigoni/CATSS/runs/3fi27jvn
wandb: Synced 7 W&B file(s), 0 media file(s), 0 artifact file(s) and 2 other file(s)
wandb: Find logs at: ./wandb/run-20221019_180230-3fi27jvn/logs


Job done.
Date:  mer 19 ott 2022, 18.14.30, CEST
