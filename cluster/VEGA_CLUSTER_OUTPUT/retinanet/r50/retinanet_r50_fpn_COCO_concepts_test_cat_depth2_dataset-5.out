
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
Date:  mer 2 nov 2022, 19.14.19, CET
Directory:  /ceph/hpc/home/eudavider/repository/DynamicHead
Nodelist:  login0008
Number of nodes:  1
Ntasks per node:  1
NGPUs per node:  1
CUDA_VISIBLE_DEVICES:  0
TORCH_DEVICE_COUNT:  1
SLURM_MASTER_PORT:  14723
SLURM_MASTER_NODE:  login0008
SLURM_MASTER_ADDR:  login0008
SLURM_MASTER_URL:  tcp://login0008:14723
--------------------------------------------- 
MODEL_NUM_GPUS:  1
MODEL_NUM_MACHINES:  1
MODEL_BATCH_SIZE:  5
MODEL_MAX_ITER:  576000
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 

srun: error: WARNING: Multiple leaf switches contain nodes: gn[01-60]
[nltk_data] Downloading package omw-1.4 to
[nltk_data]     /ceph/hpc/home/eudavider/nltk_data...
[nltk_data]   Package omw-1.4 is already up-to-date!
[nltk_data] Downloading package wordnet to
[nltk_data]     /ceph/hpc/home/eudavider/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
Loading config ./configs/COCO/retinanet/r50/../base_retinanet_COCO_concepts.yaml with yaml.unsafe_load. Your machine may be at risk if the file contains malicious content.
Command Line Args: Namespace(config_file='./configs/COCO/retinanet/r50/retinanet_r50_fpn_COCO_concepts_test_cat_depth2.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://login0008:14723', opts=['SOLVER.IMS_PER_BATCH', '5', 'SOLVER.MAX_ITER', '576000', 'DATASETS.TEST', '("coco_2017_val_subset_old_depth2",)', 'CONCEPT.APPLY_CONDITION', 'False', 'EVALUATOR_TYPE', 'default'])
[32m[11/02 19:14:24 detectron2]: [0mRank of current process: 0. World size: 1
[32m[11/02 19:14:25 detectron2]: [0mEnvironment info:
----------------------  ------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.9.13 | packaged by conda-forge | (main, May 27 2022, 16:56:21) [GCC 10.3.0]
numpy                   1.23.1
detectron2              0.6 @/ceph/hpc/home/eudavider/.local/lib/python3.9/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5, 8.0, 8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/ceph/hpc/home/eudavider/.conda/envs/dynamicHead/lib/python3.9/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA A100-PCIE-40GB (arch=8.0)
Driver version          510.47.03
CUDA_HOME               /usr/local/cuda
Pillow                  9.2.0
torchvision             0.11.0 @/ceph/hpc/home/eudavider/.conda/envs/dynamicHead/lib/python3.9/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20220512
iopath                  0.1.9
cv2                     Not found
----------------------  ------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[32m[11/02 19:14:25 detectron2]: [0mCommand line arguments: Namespace(config_file='./configs/COCO/retinanet/r50/retinanet_r50_fpn_COCO_concepts_test_cat_depth2.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://login0008:14723', opts=['SOLVER.IMS_PER_BATCH', '5', 'SOLVER.MAX_ITER', '576000', 'DATASETS.TEST', '("coco_2017_val_subset_old_depth2",)', 'CONCEPT.APPLY_CONDITION', 'False', 'EVALUATOR_TYPE', 'default'])
[32m[11/02 19:14:25 detectron2]: [0mContents of args.config_file=./configs/COCO/retinanet/r50/retinanet_r50_fpn_COCO_concepts_test_cat_depth2.yaml:
_BASE_: "../base_retinanet_COCO_concepts.yaml"
MODEL:
  WEIGHTS: "./results/COCO/retinanet/retinanet_r50_fpn_COCO_concepts_cat_depth2/model_final.pth"
  MASK_ON: False
  RESNETS:
    DEPTH: 50
CONCEPT:
  CONCEPT_FUSION: "cat" # ["cat", "mul", "add", "zeros"]
  APPLY_CONDITION: TRUE
  APPLY_CONDITION_FROM_FILE: FALSE
  ACTIVATE_CONCEPT_GENERATOR: FALSE
  DEPTH: 2
DATASETS:
  TRAIN: ("coco_2017_tuning_train",)
  TEST: ("coco_2017_tuning_val_all",)
DEEPSETS:
  EMB: "random"
OUTPUT_DIR: "./results/COCO/retinanet/retinanet_r50_fpn_COCO_concepts_cat_depth2/"

[32m[11/02 19:14:25 detectron2]: [0mRunning with full config:
CONCEPT:
  ACTIVATE_CONCEPT_GENERATOR: false
  APPLY_CONDITION: false
  APPLY_CONDITION_FROM_FILE: false
  CONCEPT_FUSION: cat
  DEPTH: 2
  EXTERNAL_CONCEPTS_FOLDER: ./datasets/ewiser_concepts_COCO_valid/
  FILE: ./concept/coco_to_synset.json
  ONLY_NAME: true
  UNIQUE: true
  VOCAB: ./concept/vocab.json
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 16
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_2017_val_subset_old_depth2
  TRAIN:
  - coco_2017_tuning_train
DEEPSETS:
  AGGREGATE: sum
  EMB: random
  EMB_DIM: 150
  FILE: ./concept/wn30_holE_500_150_0.1_0.2_embeddings.pickle
  FREEZE: false
  MLP1_LAYERS:
  - 150
  - 256
  MLP1_OUTPUT_DIM: 256
  MLP2_LAYERS:
  - 256
  - 256
  OUTPUT_DIM: 256
EVALUATOR_TYPE: default
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 40.31747359663594
      - 50.79683366298238
    - - 64
      - 80.63494719327188
      - 101.59366732596476
    - - 128
      - 161.26989438654377
      - 203.18733465192952
    - - 256
      - 322.53978877308754
      - 406.37466930385904
    - - 512
      - 645.0795775461751
      - 812.7493386077181
  ATSS:
    BBOX_REG_WEIGHTS:
    - 10.0
    - 10.0
    - 5.0
    - 5.0
    CHANNELS: 256
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    INFERENCE_TH: 0.05
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_TH: 0.6
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    REG_LOSS_WEIGHT: 2.0
    TOPK: 9
    USE_GN: true
  BACKBONE:
    FREEZE_AT: -1
    NAME: build_retinanet_resnet_fpn_backbone
  DEVICE: cuda
  DYHEAD:
    CHANNELS: 256
    NUM_CONVS: 6
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: ConceptRetinaNet
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.0
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  SWINT:
    APE: false
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.2
    EMBED_DIM: 96
    MLP_RATIO: 4
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - stage2
    - stage3
    - stage4
    - stage5
    OUT_NORM: true
    VERSION: 1
    WINDOW_SIZE: 7
  WEIGHTS: ./results/COCO/retinanet/retinanet_r50_fpn_COCO_concepts_cat_depth2/model_final.pth
OUTPUT_DIR: ./results/COCO/retinanet/retinanet_r50_fpn_COCO_concepts_cat_depth2/
SEED: 2022
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 5
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 576000
  MOMENTUM: 0.9
  NESTEROV: false
  OPTIMIZER: SGD
  REFERENCE_WORLD_SIZE: 0
  STEPS:
  - 60000
  - 80000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[32m[11/02 19:14:26 detectron2]: [0mFull config saved to ./results/COCO/retinanet/retinanet_r50_fpn_COCO_concepts_cat_depth2/config.yaml
Loading pre-trained concepts embeddings. 
[32m[11/02 19:14:33 d2.engine.defaults]: [0mModel:
ConceptRetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(512, 720, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(512, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
  (concept_net): ConceptNet(
    (concept_vocab): Vocab()
    (concept_emb): Embedding(82116, 150)
    (deepset): _DeepSets(
      (mlp1): MLP(
        (layers): ModuleList(
          (0): Linear(in_features=150, out_features=150, bias=True)
          (1): Linear(in_features=150, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mlp2): MLP(
        (layers): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=True)
          (1): Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=256, bias=True)
        )
      )
    )
  )
)
[32m[11/02 19:14:34 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from ./results/COCO/retinanet/retinanet_r50_fpn_COCO_concepts_cat_depth2/model_final.pth ...
Load concept for each category. 
[32m[11/02 19:14:37 d2.data.build]: [0mRemoved 48 images with no usable annotations. 4952 images left.
[32m[11/02 19:14:37 d2.data.build]: [0mDistribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 7160         |   bicycle    | 191          |      car      | 1263         |
|  motorcycle   | 272          |   airplane   | 109          |      bus      | 177          |
|     train     | 151          |    truck     | 291          |     boat      | 347          |
| traffic light | 465          | fire hydrant | 78           |   stop sign   | 55           |
| parking meter | 45           |    bench     | 267          |     bird      | 359          |
|      cat      | 148          |     dog      | 160          |     horse     | 223          |
|     sheep     | 273          |     cow      | 324          |   elephant    | 217          |
|     bear      | 67           |    zebra     | 262          |    giraffe    | 220          |
|   backpack    | 219          |   umbrella   | 300          |    handbag    | 343          |
|      tie      | 157          |   suitcase   | 201          |    frisbee    | 77           |
|     skis      | 172          |  snowboard   | 53           |  sports ball  | 169          |
|     kite      | 210          | baseball bat | 105          | baseball gl.. | 106          |
|  skateboard   | 130          |  surfboard   | 201          | tennis racket | 140          |
|    bottle     | 654          |  wine glass  | 240          |      cup      | 541          |
|     fork      | 138          |    knife     | 188          |     spoon     | 155          |
|     bowl      | 425          |    banana    | 299          |     apple     | 134          |
|   sandwich    | 98           |    orange    | 173          |   broccoli    | 238          |
|    carrot     | 228          |   hot dog    | 89           |     pizza     | 180          |
|     donut     | 258          |     cake     | 212          |     chair     | 1032         |
|     couch     | 179          | potted plant | 255          |      bed      | 104          |
| dining table  | 413          |    toilet    | 144          |      tv       | 173          |
|    laptop     | 133          |    mouse     | 60           |    remote     | 214          |
|   keyboard    | 82           |  cell phone  | 171          |   microwave   | 36           |
|     oven      | 97           |   toaster    | 3            |     sink      | 159          |
| refrigerator  | 94           |     book     | 622          |     clock     | 201          |
|     vase      | 174          |   scissors   | 29           |  teddy bear   | 125          |
|  hair drier   | 6            |  toothbrush  | 38           |               |              |
|     total     | 24501        |              |              |               |              |[0m
[32m[11/02 19:14:37 d2.data.common]: [0mSerializing 4952 elements to byte tensors and concatenating them all ...
[32m[11/02 19:14:38 d2.data.common]: [0mSerialized dataset takes 14.12 MiB
[5m[31mWARNING[0m [32m[11/02 19:14:38 d2.evaluation.coco_evaluation]: [0mCOCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[32m[11/02 19:14:38 d2.evaluation.evaluator]: [0mStart inference on 4952 batches
/ceph/hpc/home/eudavider/.local/lib/python3.9/site-packages/detectron2/structures/image_list.py:88: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  max_size = (max_size + (stride - 1)) // stride * stride
/ceph/hpc/home/eudavider/.conda/envs/dynamicHead/lib/python3.9/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1634272164809/work/aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
[32m[11/02 19:14:40 d2.evaluation.evaluator]: [0mInference done 11/4952. Dataloading: 0.0012 s/iter. Inference: 0.0352 s/iter. Eval: 0.0002 s/iter. Total: 0.0367 s/iter. ETA=0:03:01
[32m[11/02 19:14:45 d2.evaluation.evaluator]: [0mInference done 129/4952. Dataloading: 0.0013 s/iter. Inference: 0.0366 s/iter. Eval: 0.0029 s/iter. Total: 0.0421 s/iter. ETA=0:03:23
[32m[11/02 19:14:50 d2.evaluation.evaluator]: [0mInference done 253/4952. Dataloading: 0.0014 s/iter. Inference: 0.0374 s/iter. Eval: 0.0015 s/iter. Total: 0.0413 s/iter. ETA=0:03:13
[32m[11/02 19:14:55 d2.evaluation.evaluator]: [0mInference done 351/4952. Dataloading: 0.0014 s/iter. Inference: 0.0381 s/iter. Eval: 0.0012 s/iter. Total: 0.0440 s/iter. ETA=0:03:22
[32m[11/02 19:15:00 d2.evaluation.evaluator]: [0mInference done 465/4952. Dataloading: 0.0020 s/iter. Inference: 0.0382 s/iter. Eval: 0.0009 s/iter. Total: 0.0440 s/iter. ETA=0:03:17
[32m[11/02 19:15:06 d2.evaluation.evaluator]: [0mInference done 580/4952. Dataloading: 0.0019 s/iter. Inference: 0.0383 s/iter. Eval: 0.0008 s/iter. Total: 0.0439 s/iter. ETA=0:03:12
[32m[11/02 19:15:11 d2.evaluation.evaluator]: [0mInference done 702/4952. Dataloading: 0.0018 s/iter. Inference: 0.0384 s/iter. Eval: 0.0007 s/iter. Total: 0.0434 s/iter. ETA=0:03:04
[32m[11/02 19:15:16 d2.evaluation.evaluator]: [0mInference done 805/4952. Dataloading: 0.0017 s/iter. Inference: 0.0384 s/iter. Eval: 0.0006 s/iter. Total: 0.0441 s/iter. ETA=0:03:02
[32m[11/02 19:15:21 d2.evaluation.evaluator]: [0mInference done 907/4952. Dataloading: 0.0017 s/iter. Inference: 0.0384 s/iter. Eval: 0.0006 s/iter. Total: 0.0447 s/iter. ETA=0:03:00
[32m[11/02 19:15:26 d2.evaluation.evaluator]: [0mInference done 1014/4952. Dataloading: 0.0017 s/iter. Inference: 0.0385 s/iter. Eval: 0.0005 s/iter. Total: 0.0449 s/iter. ETA=0:02:56
[32m[11/02 19:15:31 d2.evaluation.evaluator]: [0mInference done 1125/4952. Dataloading: 0.0017 s/iter. Inference: 0.0386 s/iter. Eval: 0.0007 s/iter. Total: 0.0450 s/iter. ETA=0:02:52
[32m[11/02 19:15:36 d2.evaluation.evaluator]: [0mInference done 1243/4952. Dataloading: 0.0017 s/iter. Inference: 0.0386 s/iter. Eval: 0.0006 s/iter. Total: 0.0447 s/iter. ETA=0:02:45
[32m[11/02 19:15:41 d2.evaluation.evaluator]: [0mInference done 1368/4952. Dataloading: 0.0017 s/iter. Inference: 0.0386 s/iter. Eval: 0.0006 s/iter. Total: 0.0443 s/iter. ETA=0:02:38
[32m[11/02 19:15:46 d2.evaluation.evaluator]: [0mInference done 1491/4952. Dataloading: 0.0017 s/iter. Inference: 0.0385 s/iter. Eval: 0.0006 s/iter. Total: 0.0440 s/iter. ETA=0:02:32
[32m[11/02 19:15:51 d2.evaluation.evaluator]: [0mInference done 1612/4952. Dataloading: 0.0017 s/iter. Inference: 0.0385 s/iter. Eval: 0.0005 s/iter. Total: 0.0439 s/iter. ETA=0:02:26
[32m[11/02 19:15:56 d2.evaluation.evaluator]: [0mInference done 1729/4952. Dataloading: 0.0017 s/iter. Inference: 0.0386 s/iter. Eval: 0.0005 s/iter. Total: 0.0438 s/iter. ETA=0:02:21
[32m[11/02 19:16:01 d2.evaluation.evaluator]: [0mInference done 1845/4952. Dataloading: 0.0018 s/iter. Inference: 0.0387 s/iter. Eval: 0.0005 s/iter. Total: 0.0438 s/iter. ETA=0:02:16
[32m[11/02 19:16:06 d2.evaluation.evaluator]: [0mInference done 1963/4952. Dataloading: 0.0018 s/iter. Inference: 0.0387 s/iter. Eval: 0.0005 s/iter. Total: 0.0437 s/iter. ETA=0:02:10
[32m[11/02 19:16:11 d2.evaluation.evaluator]: [0mInference done 2087/4952. Dataloading: 0.0018 s/iter. Inference: 0.0387 s/iter. Eval: 0.0005 s/iter. Total: 0.0435 s/iter. ETA=0:02:04
[32m[11/02 19:16:16 d2.evaluation.evaluator]: [0mInference done 2209/4952. Dataloading: 0.0018 s/iter. Inference: 0.0386 s/iter. Eval: 0.0004 s/iter. Total: 0.0434 s/iter. ETA=0:01:58
[32m[11/02 19:16:21 d2.evaluation.evaluator]: [0mInference done 2323/4952. Dataloading: 0.0018 s/iter. Inference: 0.0387 s/iter. Eval: 0.0004 s/iter. Total: 0.0434 s/iter. ETA=0:01:54
[32m[11/02 19:16:26 d2.evaluation.evaluator]: [0mInference done 2442/4952. Dataloading: 0.0018 s/iter. Inference: 0.0388 s/iter. Eval: 0.0004 s/iter. Total: 0.0433 s/iter. ETA=0:01:48
[32m[11/02 19:16:31 d2.evaluation.evaluator]: [0mInference done 2560/4952. Dataloading: 0.0018 s/iter. Inference: 0.0388 s/iter. Eval: 0.0004 s/iter. Total: 0.0433 s/iter. ETA=0:01:43
[32m[11/02 19:16:36 d2.evaluation.evaluator]: [0mInference done 2679/4952. Dataloading: 0.0018 s/iter. Inference: 0.0388 s/iter. Eval: 0.0004 s/iter. Total: 0.0432 s/iter. ETA=0:01:38
[32m[11/02 19:16:41 d2.evaluation.evaluator]: [0mInference done 2798/4952. Dataloading: 0.0018 s/iter. Inference: 0.0389 s/iter. Eval: 0.0004 s/iter. Total: 0.0432 s/iter. ETA=0:01:33
[32m[11/02 19:16:46 d2.evaluation.evaluator]: [0mInference done 2912/4952. Dataloading: 0.0018 s/iter. Inference: 0.0390 s/iter. Eval: 0.0004 s/iter. Total: 0.0432 s/iter. ETA=0:01:28
[32m[11/02 19:16:51 d2.evaluation.evaluator]: [0mInference done 3032/4952. Dataloading: 0.0018 s/iter. Inference: 0.0390 s/iter. Eval: 0.0004 s/iter. Total: 0.0432 s/iter. ETA=0:01:22
[32m[11/02 19:16:56 d2.evaluation.evaluator]: [0mInference done 3156/4952. Dataloading: 0.0018 s/iter. Inference: 0.0389 s/iter. Eval: 0.0004 s/iter. Total: 0.0431 s/iter. ETA=0:01:17
[32m[11/02 19:17:01 d2.evaluation.evaluator]: [0mInference done 3278/4952. Dataloading: 0.0018 s/iter. Inference: 0.0389 s/iter. Eval: 0.0004 s/iter. Total: 0.0430 s/iter. ETA=0:01:11
[32m[11/02 19:17:06 d2.evaluation.evaluator]: [0mInference done 3396/4952. Dataloading: 0.0018 s/iter. Inference: 0.0389 s/iter. Eval: 0.0004 s/iter. Total: 0.0430 s/iter. ETA=0:01:06
[32m[11/02 19:17:11 d2.evaluation.evaluator]: [0mInference done 3512/4952. Dataloading: 0.0019 s/iter. Inference: 0.0389 s/iter. Eval: 0.0004 s/iter. Total: 0.0430 s/iter. ETA=0:01:01
[32m[11/02 19:17:16 d2.evaluation.evaluator]: [0mInference done 3619/4952. Dataloading: 0.0019 s/iter. Inference: 0.0390 s/iter. Eval: 0.0004 s/iter. Total: 0.0431 s/iter. ETA=0:00:57
[32m[11/02 19:17:21 d2.evaluation.evaluator]: [0mInference done 3733/4952. Dataloading: 0.0019 s/iter. Inference: 0.0391 s/iter. Eval: 0.0004 s/iter. Total: 0.0431 s/iter. ETA=0:00:52
[32m[11/02 19:17:26 d2.evaluation.evaluator]: [0mInference done 3849/4952. Dataloading: 0.0019 s/iter. Inference: 0.0392 s/iter. Eval: 0.0004 s/iter. Total: 0.0431 s/iter. ETA=0:00:47
[32m[11/02 19:17:31 d2.evaluation.evaluator]: [0mInference done 3960/4952. Dataloading: 0.0019 s/iter. Inference: 0.0392 s/iter. Eval: 0.0004 s/iter. Total: 0.0432 s/iter. ETA=0:00:42
[32m[11/02 19:17:36 d2.evaluation.evaluator]: [0mInference done 4084/4952. Dataloading: 0.0019 s/iter. Inference: 0.0392 s/iter. Eval: 0.0004 s/iter. Total: 0.0431 s/iter. ETA=0:00:37
[32m[11/02 19:17:41 d2.evaluation.evaluator]: [0mInference done 4212/4952. Dataloading: 0.0018 s/iter. Inference: 0.0391 s/iter. Eval: 0.0004 s/iter. Total: 0.0430 s/iter. ETA=0:00:31
[32m[11/02 19:17:46 d2.evaluation.evaluator]: [0mInference done 4334/4952. Dataloading: 0.0019 s/iter. Inference: 0.0391 s/iter. Eval: 0.0004 s/iter. Total: 0.0429 s/iter. ETA=0:00:26
[32m[11/02 19:17:51 d2.evaluation.evaluator]: [0mInference done 4455/4952. Dataloading: 0.0019 s/iter. Inference: 0.0391 s/iter. Eval: 0.0004 s/iter. Total: 0.0429 s/iter. ETA=0:00:21
[32m[11/02 19:17:56 d2.evaluation.evaluator]: [0mInference done 4577/4952. Dataloading: 0.0019 s/iter. Inference: 0.0390 s/iter. Eval: 0.0003 s/iter. Total: 0.0429 s/iter. ETA=0:00:16
[32m[11/02 19:18:01 d2.evaluation.evaluator]: [0mInference done 4695/4952. Dataloading: 0.0019 s/iter. Inference: 0.0391 s/iter. Eval: 0.0003 s/iter. Total: 0.0429 s/iter. ETA=0:00:11
[32m[11/02 19:18:06 d2.evaluation.evaluator]: [0mInference done 4813/4952. Dataloading: 0.0019 s/iter. Inference: 0.0391 s/iter. Eval: 0.0003 s/iter. Total: 0.0429 s/iter. ETA=0:00:05
[32m[11/02 19:18:11 d2.evaluation.evaluator]: [0mInference done 4926/4952. Dataloading: 0.0019 s/iter. Inference: 0.0391 s/iter. Eval: 0.0003 s/iter. Total: 0.0429 s/iter. ETA=0:00:01
[32m[11/02 19:18:12 d2.evaluation.evaluator]: [0mTotal inference time: 0:03:32.198819 (0.042894 s / iter per device, on 1 devices)
[32m[11/02 19:18:13 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:03:13 (0.039080 s / iter per device, on 1 devices)
[32m[11/02 19:18:14 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/02 19:18:14 d2.evaluation.coco_evaluation]: [0mSaving results to ./results/COCO/retinanet/retinanet_r50_fpn_COCO_concepts_cat_depth2/inference/coco_instances_results.json
[32m[11/02 19:18:16 d2.evaluation.coco_evaluation]: [0mEvaluating predictions with official COCO API...
Loading and preparing results...
DONE (t=1.23s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=30.28s).
Accumulating evaluation results...
DONE (t=7.65s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.277
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.414
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.299
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.162
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.312
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.377
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.321
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.515
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.547
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.348
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.584
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.703
[32m[11/02 19:18:56 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 27.744 | 41.446 | 29.875 | 16.162 | 31.153 | 37.739 |
[32m[11/02 19:18:56 d2.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category      | AP     | category     | AP     | category       | AP     |
|:--------------|:-------|:-------------|:-------|:---------------|:-------|
| person        | 33.687 | bicycle      | 17.215 | car            | 23.881 |
| motorcycle    | 28.172 | airplane     | 53.447 | bus            | 39.392 |
| train         | 43.919 | truck        | 25.873 | boat           | 18.469 |
| traffic light | 17.566 | fire hydrant | 57.642 | stop sign      | 60.543 |
| parking meter | 28.488 | bench        | 13.834 | bird           | 29.538 |
| cat           | 47.249 | dog          | 43.453 | horse          | 40.582 |
| sheep         | 42.957 | cow          | 46.710 | elephant       | 50.888 |
| bear          | 59.211 | zebra        | 62.885 | giraffe        | 61.018 |
| backpack      | 6.659  | umbrella     | 19.496 | handbag        | 7.272  |
| tie           | 17.219 | suitcase     | 19.987 | frisbee        | 44.194 |
| skis          | 10.330 | snowboard    | 17.119 | sports ball    | 33.755 |
| kite          | 24.008 | baseball bat | 14.838 | baseball glove | 18.591 |
| skateboard    | 27.923 | surfboard    | 22.199 | tennis racket  | 23.608 |
| bottle        | 24.449 | wine glass   | 17.348 | cup            | 23.814 |
| fork          | 15.147 | knife        | 7.539  | spoon          | 5.092  |
| bowl          | 27.054 | banana       | 16.722 | apple          | 12.883 |
| sandwich      | 23.503 | orange       | 24.621 | broccoli       | 17.211 |
| carrot        | 14.321 | hot dog      | 19.902 | pizza          | 37.245 |
| donut         | 35.678 | cake         | 17.555 | chair          | 13.634 |
| couch         | 27.990 | potted plant | 17.293 | bed            | 29.161 |
| dining table  | 14.977 | toilet       | 47.005 | tv             | 31.119 |
| laptop        | 32.262 | mouse        | 39.233 | remote         | 15.211 |
| keyboard      | 24.991 | cell phone   | 23.808 | microwave      | 49.971 |
| oven          | 21.147 | toaster      | 29.592 | sink           | 27.026 |
| refrigerator  | 40.097 | book         | 5.322  | clock          | 44.031 |
| vase          | 24.780 | scissors     | 18.903 | teddy bear     | 35.542 |
| hair drier    | 0.928  | toothbrush   | 11.567 |                |        |
[32m[11/02 19:18:56 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/02 19:18:57 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/02 19:18:57 d2.evaluation.testing]: [0mcopypaste: 27.7437,41.4455,29.8746,16.1618,31.1528,37.7393


Job done.
Date:  mer 2 nov 2022, 19.19.14, CET
