
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
Date:  lun 7 nov 2022, 23.54.57, CET
Directory:  /ceph/hpc/home/eudavider/repository/DynamicHead
Nodelist:  login0005
Number of nodes:  1
Ntasks per node:  1
NGPUs per node:  1
CUDA_VISIBLE_DEVICES:  0
TORCH_DEVICE_COUNT:  1
SLURM_MASTER_PORT:  11900
SLURM_MASTER_NODE:  login0005
SLURM_MASTER_ADDR:  login0005
SLURM_MASTER_URL:  tcp://login0005:11900
--------------------------------------------- 
MODEL_NUM_GPUS:  1
MODEL_NUM_MACHINES:  1
MODEL_BATCH_SIZE:  5
MODEL_MAX_ITER:  576000
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 

srun: error: WARNING: Multiple leaf switches contain nodes: gn[01-60]
[nltk_data] Downloading package omw-1.4 to
[nltk_data]     /ceph/hpc/home/eudavider/nltk_data...
[nltk_data]   Package omw-1.4 is already up-to-date!
[nltk_data] Downloading package wordnet to
[nltk_data]     /ceph/hpc/home/eudavider/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
Loading config ./configs/COCO/dh/r101/../base_dh_COCO.yaml with yaml.unsafe_load. Your machine may be at risk if the file contains malicious content.
Command Line Args: Namespace(config_file='./configs/COCO/dh/r101/dh_r101_fpn_COCO_test.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://login0005:11900', opts=['SOLVER.IMS_PER_BATCH', '5', 'SOLVER.MAX_ITER', '576000', 'DATASETS.TEST', '("coco_2017_val",)', 'EVALUATOR_TYPE', 'GTFilter'])
[32m[11/07 23:55:25 detectron2]: [0mRank of current process: 0. World size: 1
[32m[11/07 23:55:27 detectron2]: [0mEnvironment info:
----------------------  ------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.9.13 | packaged by conda-forge | (main, May 27 2022, 16:56:21) [GCC 10.3.0]
numpy                   1.23.1
detectron2              0.6 @/ceph/hpc/home/eudavider/.local/lib/python3.9/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 11.3
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5, 8.0, 8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/ceph/hpc/home/eudavider/.conda/envs/dynamicHead/lib/python3.9/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA A100-PCIE-40GB MIG 1g.5gb (arch=8.0)
Driver version          510.47.03
CUDA_HOME               /usr/local/cuda
Pillow                  9.2.0
torchvision             0.11.0 @/ceph/hpc/home/eudavider/.conda/envs/dynamicHead/lib/python3.9/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20220512
iopath                  0.1.9
cv2                     Not found
----------------------  ------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[32m[11/07 23:55:27 detectron2]: [0mCommand line arguments: Namespace(config_file='./configs/COCO/dh/r101/dh_r101_fpn_COCO_test.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://login0005:11900', opts=['SOLVER.IMS_PER_BATCH', '5', 'SOLVER.MAX_ITER', '576000', 'DATASETS.TEST', '("coco_2017_val",)', 'EVALUATOR_TYPE', 'GTFilter'])
[32m[11/07 23:55:27 detectron2]: [0mContents of args.config_file=./configs/COCO/dh/r101/dh_r101_fpn_COCO_test.yaml:
_BASE_: "../base_dh_COCO.yaml"
MODEL:
  WEIGHTS: "./results/COCO/dh/dh_r101_fpn_COCO/model_final.pth"
  BACKBONE:
    NAME: "build_retinanet_resnet_fpn_dyhead_backbone"
  RESNETS:
    DEPTH: 101
    OUT_FEATURES: ["res3", "res4", "res5"]
  FPN:
    IN_FEATURES: ["res3", "res4", "res5"]
  ATSS:
    NUM_CONVS: 2
DATASETS:
  TRAIN: ("coco_2017_tuning_train",)
  TEST: ("coco_2017_tuning_val",)
OUTPUT_DIR: "./results/COCO/dh/dh_r101_fpn_COCO/"
[32m[11/07 23:55:27 detectron2]: [0mRunning with full config:
CONCEPT:
  ACTIVATE_CONCEPT_GENERATOR: true
  APPLY_CONDITION: true
  APPLY_CONDITION_FROM_FILE: false
  CONCEPT_FUSION: cat
  DEPTH: 3
  EXTERNAL_CONCEPTS_FOLDER: ./datasets/ewiser_concepts_COCO_valid/
  FILE: ./concept/coco_to_synset.json
  ONLY_NAME: true
  UNIQUE: true
  VOCAB: ./concept/vocab.json
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 16
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_2017_val
  TRAIN:
  - coco_2017_tuning_train
DEEPSETS:
  AGGREGATE: sum
  EMB: wordnet
  EMB_DIM: 150
  FILE: ./concept/wn30_holE_500_150_0.1_0.2_embeddings.pickle
  FREEZE: true
  MLP1_LAYERS:
  - 150
  - 150
  MLP1_OUTPUT_DIM: 150
  MLP2_LAYERS:
  - 150
  OUTPUT_DIM: 256
EVALUATOR_TYPE: GTFilter
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 640
  - 672
  - 704
  - 736
  - 768
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - 1.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.5
    SIZES:
    - - 64
    - - 128
    - - 256
    - - 512
    - - 1024
  ATSS:
    BBOX_REG_WEIGHTS:
    - 10.0
    - 10.0
    - 5.0
    - 5.0
    CHANNELS: 256
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    INFERENCE_TH: 0.05
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_TH: 0.6
    NUM_CLASSES: 80
    NUM_CONVS: 2
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    REG_LOSS_WEIGHT: 2.0
    TOPK: 9
    USE_GN: true
  BACKBONE:
    FREEZE_AT: -1
    NAME: build_retinanet_resnet_fpn_dyhead_backbone
  DEVICE: cuda
  DYHEAD:
    CHANNELS: 256
    NUM_CONVS: 6
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: ATSS
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 123.675
  - 116.28
  - 103.53
  PIXEL_STD:
  - 58.395
  - 57.12
  - 57.375
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  SWINT:
    APE: false
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.2
    EMBED_DIM: 96
    MLP_RATIO: 4
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - stage3
    - stage4
    - stage5
    OUT_NORM: true
    VERSION: 1
    WINDOW_SIZE: 7
  WEIGHTS: ./results/COCO/dh/dh_r101_fpn_COCO/model_final.pth
OUTPUT_DIR: ./results/COCO/dh/dh_r101_fpn_COCO/
SEED: 2022
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.0001
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 5
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 576000
  MOMENTUM: 0.9
  NESTEROV: false
  OPTIMIZER: ADAMW
  REFERENCE_WORLD_SIZE: 0
  STEPS:
  - 60000
  - 80000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: 0.05
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[32m[11/07 23:55:27 detectron2]: [0mFull config saved to ./results/COCO/dh/dh_r101_fpn_COCO/config.yaml
[32m[11/07 23:55:36 d2.engine.defaults]: [0mModel:
ATSS(
  (backbone): DyHead(
    (backbone): FPN(
      (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
      (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
      (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
      (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (top_block): LastLevelP6P7(
        (p6): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      )
      (bottom_up): ResNet(
        (stem): BasicStem(
          (conv1): Conv2d(
            3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (res2): Sequential(
          (0): BottleneckBlock(
            (shortcut): Conv2d(
              64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv1): Conv2d(
              64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
            )
            (conv2): Conv2d(
              64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
            )
            (conv3): Conv2d(
              64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
          )
          (1): BottleneckBlock(
            (conv1): Conv2d(
              256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
            )
            (conv2): Conv2d(
              64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
            )
            (conv3): Conv2d(
              64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
          )
          (2): BottleneckBlock(
            (conv1): Conv2d(
              256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
            )
            (conv2): Conv2d(
              64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
            )
            (conv3): Conv2d(
              64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
          )
        )
        (res3): Sequential(
          (0): BottleneckBlock(
            (shortcut): Conv2d(
              256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
              (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
            )
            (conv1): Conv2d(
              256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
              (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
            )
            (conv2): Conv2d(
              128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
            )
            (conv3): Conv2d(
              128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
            )
          )
          (1): BottleneckBlock(
            (conv1): Conv2d(
              512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
            )
            (conv2): Conv2d(
              128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
            )
            (conv3): Conv2d(
              128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
            )
          )
          (2): BottleneckBlock(
            (conv1): Conv2d(
              512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
            )
            (conv2): Conv2d(
              128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
            )
            (conv3): Conv2d(
              128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
            )
          )
          (3): BottleneckBlock(
            (conv1): Conv2d(
              512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
            )
            (conv2): Conv2d(
              128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
            )
            (conv3): Conv2d(
              128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
            )
          )
        )
        (res4): Sequential(
          (0): BottleneckBlock(
            (shortcut): Conv2d(
              512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
            (conv1): Conv2d(
              512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (1): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (2): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (3): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (4): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (5): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (6): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (7): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (8): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (9): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (10): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (11): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (12): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (13): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (14): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (15): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (16): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (17): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (18): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (19): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (20): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (21): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
          (22): BottleneckBlock(
            (conv1): Conv2d(
              1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
            )
            (conv3): Conv2d(
              256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
            )
          )
        )
        (res5): Sequential(
          (0): BottleneckBlock(
            (shortcut): Conv2d(
              1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
              (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
            )
            (conv1): Conv2d(
              1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
              (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
            )
            (conv2): Conv2d(
              512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
            )
            (conv3): Conv2d(
              512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
            )
          )
          (1): BottleneckBlock(
            (conv1): Conv2d(
              2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
            )
            (conv2): Conv2d(
              512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
            )
            (conv3): Conv2d(
              512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
            )
          )
          (2): BottleneckBlock(
            (conv1): Conv2d(
              2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
            )
            (conv2): Conv2d(
              512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
            )
            (conv3): Conv2d(
              512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
            )
          )
        )
      )
    )
    (dyhead_tower): Sequential(
      (0): DyConv(
        (DyConv): ModuleList(
          (0): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=1, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
          (1): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=1, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
          (2): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=2, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
        )
        (AttnConv): Sequential(
          (0): AdaptiveAvgPool2d(output_size=1)
          (1): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
          (2): ReLU(inplace=True)
        )
        (h_sigmoid): h_sigmoid(
          (relu): ReLU6(inplace=True)
        )
        (relu): DYReLU(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=64, bias=True)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1024, bias=True)
            (3): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
        )
        (offset): Conv2d(256, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): DyConv(
        (DyConv): ModuleList(
          (0): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=1, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
          (1): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=1, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
          (2): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=2, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
        )
        (AttnConv): Sequential(
          (0): AdaptiveAvgPool2d(output_size=1)
          (1): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
          (2): ReLU(inplace=True)
        )
        (h_sigmoid): h_sigmoid(
          (relu): ReLU6(inplace=True)
        )
        (relu): DYReLU(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=64, bias=True)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1024, bias=True)
            (3): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
        )
        (offset): Conv2d(256, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (2): DyConv(
        (DyConv): ModuleList(
          (0): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=1, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
          (1): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=1, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
          (2): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=2, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
        )
        (AttnConv): Sequential(
          (0): AdaptiveAvgPool2d(output_size=1)
          (1): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
          (2): ReLU(inplace=True)
        )
        (h_sigmoid): h_sigmoid(
          (relu): ReLU6(inplace=True)
        )
        (relu): DYReLU(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=64, bias=True)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1024, bias=True)
            (3): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
        )
        (offset): Conv2d(256, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (3): DyConv(
        (DyConv): ModuleList(
          (0): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=1, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
          (1): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=1, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
          (2): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=2, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
        )
        (AttnConv): Sequential(
          (0): AdaptiveAvgPool2d(output_size=1)
          (1): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
          (2): ReLU(inplace=True)
        )
        (h_sigmoid): h_sigmoid(
          (relu): ReLU6(inplace=True)
        )
        (relu): DYReLU(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=64, bias=True)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1024, bias=True)
            (3): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
        )
        (offset): Conv2d(256, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (4): DyConv(
        (DyConv): ModuleList(
          (0): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=1, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
          (1): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=1, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
          (2): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=2, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
        )
        (AttnConv): Sequential(
          (0): AdaptiveAvgPool2d(output_size=1)
          (1): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
          (2): ReLU(inplace=True)
        )
        (h_sigmoid): h_sigmoid(
          (relu): ReLU6(inplace=True)
        )
        (relu): DYReLU(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=64, bias=True)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1024, bias=True)
            (3): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
        )
        (offset): Conv2d(256, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (5): DyConv(
        (DyConv): ModuleList(
          (0): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=1, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
          (1): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=1, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
          (2): Conv3x3Norm(
            (conv): ModulatedDeformConv(in_channels=256, out_channels=256, kernel_size=(3, 3), stride=2, dilation=1, padding=1, groups=1, deformable_groups=1, bias=True)
            (bn): GroupNorm(16, 256, eps=1e-05, affine=True)
          )
        )
        (AttnConv): Sequential(
          (0): AdaptiveAvgPool2d(output_size=1)
          (1): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
          (2): ReLU(inplace=True)
        )
        (h_sigmoid): h_sigmoid(
          (relu): ReLU6(inplace=True)
        )
        (relu): DYReLU(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=64, bias=True)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=64, out_features=1024, bias=True)
            (3): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
        )
        (offset): Conv2d(256, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
  )
  (head): ATSSHead(
    (cls_tower): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): GroupNorm(32, 256, eps=1e-05, affine=True)
      (2): ReLU()
      (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (4): GroupNorm(32, 256, eps=1e-05, affine=True)
      (5): ReLU()
    )
    (bbox_tower): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): GroupNorm(32, 256, eps=1e-05, affine=True)
      (2): ReLU()
      (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (4): GroupNorm(32, 256, eps=1e-05, affine=True)
      (5): ReLU()
    )
    (cls_logits): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    (bbox_pred): Conv2d(256, 4, kernel_size=(1, 1), stride=(1, 1))
    (centerness): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    (scales): ModuleList(
      (0): Scale()
      (1): Scale()
      (2): Scale()
      (3): Scale()
      (4): Scale()
    )
  )
  (centerness_loss_func): BCEWithLogitsLoss()
  (classification_loss_func): SigmoidFocalLoss(gamma=2.0, alpha=0.25)
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[32m[11/07 23:55:36 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from ./results/COCO/dh/dh_r101_fpn_COCO/model_final.pth ...
Load concept for each category. 
[32m[11/07 23:55:40 d2.data.datasets.coco]: [0mLoaded 5000 images in COCO format from datasets/coco/annotations/instances_val2017.json
[32m[11/07 23:55:40 d2.data.build]: [0mRemoved 48 images with no usable annotations. 4952 images left.
[32m[11/07 23:55:41 d2.data.build]: [0mDistribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 10777        |   bicycle    | 314          |      car      | 1918         |
|  motorcycle   | 367          |   airplane   | 143          |      bus      | 283          |
|     train     | 190          |    truck     | 414          |     boat      | 424          |
| traffic light | 634          | fire hydrant | 101          |   stop sign   | 75           |
| parking meter | 60           |    bench     | 411          |     bird      | 427          |
|      cat      | 202          |     dog      | 218          |     horse     | 272          |
|     sheep     | 354          |     cow      | 372          |   elephant    | 252          |
|     bear      | 71           |    zebra     | 266          |    giraffe    | 232          |
|   backpack    | 371          |   umbrella   | 407          |    handbag    | 540          |
|      tie      | 252          |   suitcase   | 299          |    frisbee    | 115          |
|     skis      | 241          |  snowboard   | 69           |  sports ball  | 260          |
|     kite      | 327          | baseball bat | 145          | baseball gl.. | 148          |
|  skateboard   | 179          |  surfboard   | 267          | tennis racket | 225          |
|    bottle     | 1013         |  wine glass  | 341          |      cup      | 895          |
|     fork      | 215          |    knife     | 325          |     spoon     | 253          |
|     bowl      | 623          |    banana    | 370          |     apple     | 236          |
|   sandwich    | 177          |    orange    | 285          |   broccoli    | 312          |
|    carrot     | 365          |   hot dog    | 125          |     pizza     | 284          |
|     donut     | 328          |     cake     | 310          |     chair     | 1771         |
|     couch     | 261          | potted plant | 342          |      bed      | 163          |
| dining table  | 695          |    toilet    | 179          |      tv       | 288          |
|    laptop     | 231          |    mouse     | 106          |    remote     | 283          |
|   keyboard    | 153          |  cell phone  | 262          |   microwave   | 55           |
|     oven      | 143          |   toaster    | 9            |     sink      | 225          |
| refrigerator  | 126          |     book     | 1129         |     clock     | 267          |
|     vase      | 274          |   scissors   | 36           |  teddy bear   | 190          |
|  hair drier   | 11           |  toothbrush  | 57           |               |              |
|     total     | 36335        |              |              |               |              |[0m
[32m[11/07 23:55:41 d2.data.common]: [0mSerializing 4952 elements to byte tensors and concatenating them all ...
[32m[11/07 23:55:41 d2.data.common]: [0mSerialized dataset takes 19.09 MiB
COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[32m[11/07 23:55:41 d2.evaluation.evaluator]: [0mStart inference on 4952 batches
/ceph/hpc/home/eudavider/.local/lib/python3.9/site-packages/detectron2/structures/image_list.py:88: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  max_size = (max_size + (stride - 1)) // stride * stride
/ceph/hpc/home/eudavider/.conda/envs/dynamicHead/lib/python3.9/site-packages/torch/nn/functional.py:3847: UserWarning: nn.functional.upsample_bilinear is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample_bilinear is deprecated. Use nn.functional.interpolate instead.")
/ceph/hpc/home/eudavider/.conda/envs/dynamicHead/lib/python3.9/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1634272164809/work/aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
[32m[11/07 23:55:47 d2.evaluation.evaluator]: [0mInference done 11/4952. Dataloading: 0.0012 s/iter. Inference: 0.2450 s/iter. Eval: 0.0002 s/iter. Total: 0.2464 s/iter. ETA=0:20:17
[32m[11/07 23:55:52 d2.evaluation.evaluator]: [0mInference done 32/4952. Dataloading: 0.0011 s/iter. Inference: 0.2449 s/iter. Eval: 0.0002 s/iter. Total: 0.2481 s/iter. ETA=0:20:20
[32m[11/07 23:55:57 d2.evaluation.evaluator]: [0mInference done 53/4952. Dataloading: 0.0013 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2486 s/iter. ETA=0:20:18
[32m[11/07 23:56:02 d2.evaluation.evaluator]: [0mInference done 73/4952. Dataloading: 0.0014 s/iter. Inference: 0.2450 s/iter. Eval: 0.0003 s/iter. Total: 0.2494 s/iter. ETA=0:20:16
[32m[11/07 23:56:07 d2.evaluation.evaluator]: [0mInference done 94/4952. Dataloading: 0.0014 s/iter. Inference: 0.2441 s/iter. Eval: 0.0003 s/iter. Total: 0.2485 s/iter. ETA=0:20:07
[32m[11/07 23:56:12 d2.evaluation.evaluator]: [0mInference done 115/4952. Dataloading: 0.0014 s/iter. Inference: 0.2427 s/iter. Eval: 0.0003 s/iter. Total: 0.2472 s/iter. ETA=0:19:55
[32m[11/07 23:56:18 d2.evaluation.evaluator]: [0mInference done 135/4952. Dataloading: 0.0014 s/iter. Inference: 0.2439 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:19:56
[32m[11/07 23:56:23 d2.evaluation.evaluator]: [0mInference done 155/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2497 s/iter. ETA=0:19:57
[32m[11/07 23:56:28 d2.evaluation.evaluator]: [0mInference done 176/4952. Dataloading: 0.0014 s/iter. Inference: 0.2445 s/iter. Eval: 0.0003 s/iter. Total: 0.2492 s/iter. ETA=0:19:50
[32m[11/07 23:56:33 d2.evaluation.evaluator]: [0mInference done 196/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2498 s/iter. ETA=0:19:48
[32m[11/07 23:56:38 d2.evaluation.evaluator]: [0mInference done 217/4952. Dataloading: 0.0014 s/iter. Inference: 0.2443 s/iter. Eval: 0.0003 s/iter. Total: 0.2494 s/iter. ETA=0:19:40
[32m[11/07 23:56:43 d2.evaluation.evaluator]: [0mInference done 237/4952. Dataloading: 0.0014 s/iter. Inference: 0.2444 s/iter. Eval: 0.0003 s/iter. Total: 0.2496 s/iter. ETA=0:19:36
[32m[11/07 23:56:48 d2.evaluation.evaluator]: [0mInference done 257/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2504 s/iter. ETA=0:19:35
[32m[11/07 23:56:53 d2.evaluation.evaluator]: [0mInference done 278/4952. Dataloading: 0.0014 s/iter. Inference: 0.2443 s/iter. Eval: 0.0003 s/iter. Total: 0.2497 s/iter. ETA=0:19:27
[32m[11/07 23:56:58 d2.evaluation.evaluator]: [0mInference done 298/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2500 s/iter. ETA=0:19:23
[32m[11/07 23:57:04 d2.evaluation.evaluator]: [0mInference done 319/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2499 s/iter. ETA=0:19:17
[32m[11/07 23:57:09 d2.evaluation.evaluator]: [0mInference done 338/4952. Dataloading: 0.0014 s/iter. Inference: 0.2459 s/iter. Eval: 0.0003 s/iter. Total: 0.2512 s/iter. ETA=0:19:19
[32m[11/07 23:57:14 d2.evaluation.evaluator]: [0mInference done 357/4952. Dataloading: 0.0014 s/iter. Inference: 0.2463 s/iter. Eval: 0.0003 s/iter. Total: 0.2519 s/iter. ETA=0:19:17
[32m[11/07 23:57:19 d2.evaluation.evaluator]: [0mInference done 378/4952. Dataloading: 0.0014 s/iter. Inference: 0.2460 s/iter. Eval: 0.0003 s/iter. Total: 0.2516 s/iter. ETA=0:19:10
[32m[11/07 23:57:24 d2.evaluation.evaluator]: [0mInference done 399/4952. Dataloading: 0.0014 s/iter. Inference: 0.2455 s/iter. Eval: 0.0003 s/iter. Total: 0.2510 s/iter. ETA=0:19:02
[32m[11/07 23:57:29 d2.evaluation.evaluator]: [0mInference done 420/4952. Dataloading: 0.0014 s/iter. Inference: 0.2452 s/iter. Eval: 0.0003 s/iter. Total: 0.2508 s/iter. ETA=0:18:56
[32m[11/07 23:57:34 d2.evaluation.evaluator]: [0mInference done 440/4952. Dataloading: 0.0014 s/iter. Inference: 0.2454 s/iter. Eval: 0.0003 s/iter. Total: 0.2509 s/iter. ETA=0:18:52
[32m[11/07 23:57:39 d2.evaluation.evaluator]: [0mInference done 460/4952. Dataloading: 0.0014 s/iter. Inference: 0.2454 s/iter. Eval: 0.0003 s/iter. Total: 0.2509 s/iter. ETA=0:18:47
[32m[11/07 23:57:45 d2.evaluation.evaluator]: [0mInference done 480/4952. Dataloading: 0.0014 s/iter. Inference: 0.2455 s/iter. Eval: 0.0003 s/iter. Total: 0.2511 s/iter. ETA=0:18:42
[32m[11/07 23:57:50 d2.evaluation.evaluator]: [0mInference done 500/4952. Dataloading: 0.0014 s/iter. Inference: 0.2453 s/iter. Eval: 0.0003 s/iter. Total: 0.2511 s/iter. ETA=0:18:38
[32m[11/07 23:57:55 d2.evaluation.evaluator]: [0mInference done 520/4952. Dataloading: 0.0014 s/iter. Inference: 0.2453 s/iter. Eval: 0.0003 s/iter. Total: 0.2511 s/iter. ETA=0:18:32
[32m[11/07 23:58:00 d2.evaluation.evaluator]: [0mInference done 541/4952. Dataloading: 0.0014 s/iter. Inference: 0.2453 s/iter. Eval: 0.0003 s/iter. Total: 0.2510 s/iter. ETA=0:18:27
[32m[11/07 23:58:05 d2.evaluation.evaluator]: [0mInference done 562/4952. Dataloading: 0.0014 s/iter. Inference: 0.2452 s/iter. Eval: 0.0003 s/iter. Total: 0.2509 s/iter. ETA=0:18:21
[32m[11/07 23:58:10 d2.evaluation.evaluator]: [0mInference done 582/4952. Dataloading: 0.0014 s/iter. Inference: 0.2452 s/iter. Eval: 0.0003 s/iter. Total: 0.2510 s/iter. ETA=0:18:16
[32m[11/07 23:58:15 d2.evaluation.evaluator]: [0mInference done 603/4952. Dataloading: 0.0014 s/iter. Inference: 0.2452 s/iter. Eval: 0.0003 s/iter. Total: 0.2509 s/iter. ETA=0:18:11
[32m[11/07 23:58:21 d2.evaluation.evaluator]: [0mInference done 624/4952. Dataloading: 0.0014 s/iter. Inference: 0.2452 s/iter. Eval: 0.0003 s/iter. Total: 0.2509 s/iter. ETA=0:18:05
[32m[11/07 23:58:26 d2.evaluation.evaluator]: [0mInference done 645/4952. Dataloading: 0.0014 s/iter. Inference: 0.2452 s/iter. Eval: 0.0003 s/iter. Total: 0.2508 s/iter. ETA=0:18:00
[32m[11/07 23:58:31 d2.evaluation.evaluator]: [0mInference done 665/4952. Dataloading: 0.0014 s/iter. Inference: 0.2453 s/iter. Eval: 0.0003 s/iter. Total: 0.2509 s/iter. ETA=0:17:55
[32m[11/07 23:58:36 d2.evaluation.evaluator]: [0mInference done 685/4952. Dataloading: 0.0014 s/iter. Inference: 0.2453 s/iter. Eval: 0.0003 s/iter. Total: 0.2510 s/iter. ETA=0:17:50
[32m[11/07 23:58:41 d2.evaluation.evaluator]: [0mInference done 705/4952. Dataloading: 0.0014 s/iter. Inference: 0.2454 s/iter. Eval: 0.0003 s/iter. Total: 0.2510 s/iter. ETA=0:17:46
[32m[11/07 23:58:46 d2.evaluation.evaluator]: [0mInference done 725/4952. Dataloading: 0.0014 s/iter. Inference: 0.2455 s/iter. Eval: 0.0003 s/iter. Total: 0.2511 s/iter. ETA=0:17:41
[32m[11/07 23:58:51 d2.evaluation.evaluator]: [0mInference done 746/4952. Dataloading: 0.0014 s/iter. Inference: 0.2454 s/iter. Eval: 0.0003 s/iter. Total: 0.2511 s/iter. ETA=0:17:36
[32m[11/07 23:58:56 d2.evaluation.evaluator]: [0mInference done 766/4952. Dataloading: 0.0014 s/iter. Inference: 0.2454 s/iter. Eval: 0.0003 s/iter. Total: 0.2513 s/iter. ETA=0:17:31
[32m[11/07 23:59:02 d2.evaluation.evaluator]: [0mInference done 786/4952. Dataloading: 0.0014 s/iter. Inference: 0.2455 s/iter. Eval: 0.0003 s/iter. Total: 0.2514 s/iter. ETA=0:17:27
[32m[11/07 23:59:07 d2.evaluation.evaluator]: [0mInference done 807/4952. Dataloading: 0.0014 s/iter. Inference: 0.2455 s/iter. Eval: 0.0003 s/iter. Total: 0.2513 s/iter. ETA=0:17:21
[32m[11/07 23:59:12 d2.evaluation.evaluator]: [0mInference done 828/4952. Dataloading: 0.0014 s/iter. Inference: 0.2454 s/iter. Eval: 0.0003 s/iter. Total: 0.2512 s/iter. ETA=0:17:15
[32m[11/07 23:59:17 d2.evaluation.evaluator]: [0mInference done 848/4952. Dataloading: 0.0014 s/iter. Inference: 0.2455 s/iter. Eval: 0.0003 s/iter. Total: 0.2513 s/iter. ETA=0:17:11
[32m[11/07 23:59:22 d2.evaluation.evaluator]: [0mInference done 868/4952. Dataloading: 0.0014 s/iter. Inference: 0.2455 s/iter. Eval: 0.0003 s/iter. Total: 0.2512 s/iter. ETA=0:17:06
[32m[11/07 23:59:27 d2.evaluation.evaluator]: [0mInference done 889/4952. Dataloading: 0.0014 s/iter. Inference: 0.2455 s/iter. Eval: 0.0003 s/iter. Total: 0.2512 s/iter. ETA=0:17:00
[32m[11/07 23:59:32 d2.evaluation.evaluator]: [0mInference done 910/4952. Dataloading: 0.0014 s/iter. Inference: 0.2453 s/iter. Eval: 0.0003 s/iter. Total: 0.2510 s/iter. ETA=0:16:54
[32m[11/07 23:59:37 d2.evaluation.evaluator]: [0mInference done 930/4952. Dataloading: 0.0014 s/iter. Inference: 0.2454 s/iter. Eval: 0.0003 s/iter. Total: 0.2511 s/iter. ETA=0:16:49
[32m[11/07 23:59:43 d2.evaluation.evaluator]: [0mInference done 951/4952. Dataloading: 0.0014 s/iter. Inference: 0.2454 s/iter. Eval: 0.0003 s/iter. Total: 0.2510 s/iter. ETA=0:16:44
[32m[11/07 23:59:48 d2.evaluation.evaluator]: [0mInference done 972/4952. Dataloading: 0.0014 s/iter. Inference: 0.2454 s/iter. Eval: 0.0003 s/iter. Total: 0.2510 s/iter. ETA=0:16:38
[32m[11/07 23:59:53 d2.evaluation.evaluator]: [0mInference done 992/4952. Dataloading: 0.0014 s/iter. Inference: 0.2453 s/iter. Eval: 0.0003 s/iter. Total: 0.2510 s/iter. ETA=0:16:33
[32m[11/07 23:59:58 d2.evaluation.evaluator]: [0mInference done 1013/4952. Dataloading: 0.0014 s/iter. Inference: 0.2452 s/iter. Eval: 0.0003 s/iter. Total: 0.2508 s/iter. ETA=0:16:27
[32m[11/08 00:00:03 d2.evaluation.evaluator]: [0mInference done 1034/4952. Dataloading: 0.0014 s/iter. Inference: 0.2452 s/iter. Eval: 0.0003 s/iter. Total: 0.2507 s/iter. ETA=0:16:22
[32m[11/08 00:00:08 d2.evaluation.evaluator]: [0mInference done 1054/4952. Dataloading: 0.0014 s/iter. Inference: 0.2453 s/iter. Eval: 0.0003 s/iter. Total: 0.2508 s/iter. ETA=0:16:17
[32m[11/08 00:00:13 d2.evaluation.evaluator]: [0mInference done 1074/4952. Dataloading: 0.0014 s/iter. Inference: 0.2454 s/iter. Eval: 0.0003 s/iter. Total: 0.2509 s/iter. ETA=0:16:12
[32m[11/08 00:00:18 d2.evaluation.evaluator]: [0mInference done 1094/4952. Dataloading: 0.0014 s/iter. Inference: 0.2454 s/iter. Eval: 0.0003 s/iter. Total: 0.2509 s/iter. ETA=0:16:07
[32m[11/08 00:00:23 d2.evaluation.evaluator]: [0mInference done 1114/4952. Dataloading: 0.0014 s/iter. Inference: 0.2454 s/iter. Eval: 0.0003 s/iter. Total: 0.2509 s/iter. ETA=0:16:02
[32m[11/08 00:00:29 d2.evaluation.evaluator]: [0mInference done 1134/4952. Dataloading: 0.0014 s/iter. Inference: 0.2455 s/iter. Eval: 0.0003 s/iter. Total: 0.2509 s/iter. ETA=0:15:58
[32m[11/08 00:00:34 d2.evaluation.evaluator]: [0mInference done 1154/4952. Dataloading: 0.0014 s/iter. Inference: 0.2455 s/iter. Eval: 0.0003 s/iter. Total: 0.2510 s/iter. ETA=0:15:53
[32m[11/08 00:00:39 d2.evaluation.evaluator]: [0mInference done 1174/4952. Dataloading: 0.0014 s/iter. Inference: 0.2455 s/iter. Eval: 0.0003 s/iter. Total: 0.2510 s/iter. ETA=0:15:48
[32m[11/08 00:00:44 d2.evaluation.evaluator]: [0mInference done 1194/4952. Dataloading: 0.0014 s/iter. Inference: 0.2456 s/iter. Eval: 0.0003 s/iter. Total: 0.2510 s/iter. ETA=0:15:43
[32m[11/08 00:00:49 d2.evaluation.evaluator]: [0mInference done 1215/4952. Dataloading: 0.0014 s/iter. Inference: 0.2455 s/iter. Eval: 0.0003 s/iter. Total: 0.2509 s/iter. ETA=0:15:37
[32m[11/08 00:00:54 d2.evaluation.evaluator]: [0mInference done 1235/4952. Dataloading: 0.0014 s/iter. Inference: 0.2456 s/iter. Eval: 0.0003 s/iter. Total: 0.2510 s/iter. ETA=0:15:32
[32m[11/08 00:00:59 d2.evaluation.evaluator]: [0mInference done 1256/4952. Dataloading: 0.0014 s/iter. Inference: 0.2455 s/iter. Eval: 0.0003 s/iter. Total: 0.2509 s/iter. ETA=0:15:27
[32m[11/08 00:01:04 d2.evaluation.evaluator]: [0mInference done 1276/4952. Dataloading: 0.0014 s/iter. Inference: 0.2456 s/iter. Eval: 0.0003 s/iter. Total: 0.2509 s/iter. ETA=0:15:22
[32m[11/08 00:01:09 d2.evaluation.evaluator]: [0mInference done 1297/4952. Dataloading: 0.0014 s/iter. Inference: 0.2454 s/iter. Eval: 0.0003 s/iter. Total: 0.2508 s/iter. ETA=0:15:16
[32m[11/08 00:01:14 d2.evaluation.evaluator]: [0mInference done 1318/4952. Dataloading: 0.0014 s/iter. Inference: 0.2454 s/iter. Eval: 0.0003 s/iter. Total: 0.2507 s/iter. ETA=0:15:11
[32m[11/08 00:01:20 d2.evaluation.evaluator]: [0mInference done 1338/4952. Dataloading: 0.0014 s/iter. Inference: 0.2454 s/iter. Eval: 0.0003 s/iter. Total: 0.2508 s/iter. ETA=0:15:06
[32m[11/08 00:01:25 d2.evaluation.evaluator]: [0mInference done 1359/4952. Dataloading: 0.0014 s/iter. Inference: 0.2454 s/iter. Eval: 0.0003 s/iter. Total: 0.2508 s/iter. ETA=0:15:01
[32m[11/08 00:01:30 d2.evaluation.evaluator]: [0mInference done 1380/4952. Dataloading: 0.0014 s/iter. Inference: 0.2453 s/iter. Eval: 0.0003 s/iter. Total: 0.2506 s/iter. ETA=0:14:55
[32m[11/08 00:01:35 d2.evaluation.evaluator]: [0mInference done 1401/4952. Dataloading: 0.0014 s/iter. Inference: 0.2452 s/iter. Eval: 0.0003 s/iter. Total: 0.2506 s/iter. ETA=0:14:49
[32m[11/08 00:01:40 d2.evaluation.evaluator]: [0mInference done 1422/4952. Dataloading: 0.0014 s/iter. Inference: 0.2452 s/iter. Eval: 0.0003 s/iter. Total: 0.2506 s/iter. ETA=0:14:44
[32m[11/08 00:01:45 d2.evaluation.evaluator]: [0mInference done 1442/4952. Dataloading: 0.0014 s/iter. Inference: 0.2452 s/iter. Eval: 0.0003 s/iter. Total: 0.2506 s/iter. ETA=0:14:39
[32m[11/08 00:01:50 d2.evaluation.evaluator]: [0mInference done 1463/4952. Dataloading: 0.0014 s/iter. Inference: 0.2450 s/iter. Eval: 0.0003 s/iter. Total: 0.2504 s/iter. ETA=0:14:33
[32m[11/08 00:01:55 d2.evaluation.evaluator]: [0mInference done 1483/4952. Dataloading: 0.0014 s/iter. Inference: 0.2450 s/iter. Eval: 0.0003 s/iter. Total: 0.2505 s/iter. ETA=0:14:28
[32m[11/08 00:02:01 d2.evaluation.evaluator]: [0mInference done 1505/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2502 s/iter. ETA=0:14:22
[32m[11/08 00:02:06 d2.evaluation.evaluator]: [0mInference done 1525/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2502 s/iter. ETA=0:14:17
[32m[11/08 00:02:11 d2.evaluation.evaluator]: [0mInference done 1545/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2503 s/iter. ETA=0:14:12
[32m[11/08 00:02:16 d2.evaluation.evaluator]: [0mInference done 1566/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2502 s/iter. ETA=0:14:07
[32m[11/08 00:02:21 d2.evaluation.evaluator]: [0mInference done 1586/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2502 s/iter. ETA=0:14:02
[32m[11/08 00:02:26 d2.evaluation.evaluator]: [0mInference done 1607/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2502 s/iter. ETA=0:13:56
[32m[11/08 00:02:31 d2.evaluation.evaluator]: [0mInference done 1628/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2501 s/iter. ETA=0:13:51
[32m[11/08 00:02:36 d2.evaluation.evaluator]: [0mInference done 1649/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2501 s/iter. ETA=0:13:46
[32m[11/08 00:02:42 d2.evaluation.evaluator]: [0mInference done 1670/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2501 s/iter. ETA=0:13:40
[32m[11/08 00:02:47 d2.evaluation.evaluator]: [0mInference done 1690/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2501 s/iter. ETA=0:13:35
[32m[11/08 00:02:52 d2.evaluation.evaluator]: [0mInference done 1711/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2501 s/iter. ETA=0:13:30
[32m[11/08 00:02:57 d2.evaluation.evaluator]: [0mInference done 1732/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2501 s/iter. ETA=0:13:25
[32m[11/08 00:03:02 d2.evaluation.evaluator]: [0mInference done 1752/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2502 s/iter. ETA=0:13:20
[32m[11/08 00:03:07 d2.evaluation.evaluator]: [0mInference done 1773/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2501 s/iter. ETA=0:13:14
[32m[11/08 00:03:13 d2.evaluation.evaluator]: [0mInference done 1794/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2500 s/iter. ETA=0:13:09
[32m[11/08 00:03:18 d2.evaluation.evaluator]: [0mInference done 1814/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2500 s/iter. ETA=0:13:04
[32m[11/08 00:03:23 d2.evaluation.evaluator]: [0mInference done 1835/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2500 s/iter. ETA=0:12:59
[32m[11/08 00:03:28 d2.evaluation.evaluator]: [0mInference done 1855/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2500 s/iter. ETA=0:12:54
[32m[11/08 00:03:33 d2.evaluation.evaluator]: [0mInference done 1876/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2500 s/iter. ETA=0:12:48
[32m[11/08 00:03:38 d2.evaluation.evaluator]: [0mInference done 1897/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2501 s/iter. ETA=0:12:44
[32m[11/08 00:03:44 d2.evaluation.evaluator]: [0mInference done 1918/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2501 s/iter. ETA=0:12:38
[32m[11/08 00:03:49 d2.evaluation.evaluator]: [0mInference done 1939/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2501 s/iter. ETA=0:12:33
[32m[11/08 00:03:54 d2.evaluation.evaluator]: [0mInference done 1960/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2500 s/iter. ETA=0:12:28
[32m[11/08 00:03:59 d2.evaluation.evaluator]: [0mInference done 1981/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2500 s/iter. ETA=0:12:22
[32m[11/08 00:04:04 d2.evaluation.evaluator]: [0mInference done 2002/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2500 s/iter. ETA=0:12:17
[32m[11/08 00:04:10 d2.evaluation.evaluator]: [0mInference done 2023/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2499 s/iter. ETA=0:12:12
[32m[11/08 00:04:15 d2.evaluation.evaluator]: [0mInference done 2044/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2498 s/iter. ETA=0:12:06
[32m[11/08 00:04:20 d2.evaluation.evaluator]: [0mInference done 2065/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2498 s/iter. ETA=0:12:01
[32m[11/08 00:04:25 d2.evaluation.evaluator]: [0mInference done 2086/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2497 s/iter. ETA=0:11:55
[32m[11/08 00:04:30 d2.evaluation.evaluator]: [0mInference done 2107/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2496 s/iter. ETA=0:11:50
[32m[11/08 00:04:35 d2.evaluation.evaluator]: [0mInference done 2128/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2496 s/iter. ETA=0:11:44
[32m[11/08 00:04:40 d2.evaluation.evaluator]: [0mInference done 2149/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2495 s/iter. ETA=0:11:39
[32m[11/08 00:04:45 d2.evaluation.evaluator]: [0mInference done 2170/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2494 s/iter. ETA=0:11:33
[32m[11/08 00:04:50 d2.evaluation.evaluator]: [0mInference done 2190/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2495 s/iter. ETA=0:11:29
[32m[11/08 00:04:55 d2.evaluation.evaluator]: [0mInference done 2211/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2494 s/iter. ETA=0:11:23
[32m[11/08 00:05:01 d2.evaluation.evaluator]: [0mInference done 2232/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2494 s/iter. ETA=0:11:18
[32m[11/08 00:05:06 d2.evaluation.evaluator]: [0mInference done 2252/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2494 s/iter. ETA=0:11:13
[32m[11/08 00:05:11 d2.evaluation.evaluator]: [0mInference done 2273/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2494 s/iter. ETA=0:11:08
[32m[11/08 00:05:16 d2.evaluation.evaluator]: [0mInference done 2294/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2493 s/iter. ETA=0:11:02
[32m[11/08 00:05:21 d2.evaluation.evaluator]: [0mInference done 2315/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2493 s/iter. ETA=0:10:57
[32m[11/08 00:05:26 d2.evaluation.evaluator]: [0mInference done 2335/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2494 s/iter. ETA=0:10:52
[32m[11/08 00:05:31 d2.evaluation.evaluator]: [0mInference done 2356/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2493 s/iter. ETA=0:10:47
[32m[11/08 00:05:36 d2.evaluation.evaluator]: [0mInference done 2377/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2492 s/iter. ETA=0:10:41
[32m[11/08 00:05:42 d2.evaluation.evaluator]: [0mInference done 2398/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2492 s/iter. ETA=0:10:36
[32m[11/08 00:05:47 d2.evaluation.evaluator]: [0mInference done 2418/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2493 s/iter. ETA=0:10:31
[32m[11/08 00:05:52 d2.evaluation.evaluator]: [0mInference done 2439/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2493 s/iter. ETA=0:10:26
[32m[11/08 00:05:57 d2.evaluation.evaluator]: [0mInference done 2460/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2492 s/iter. ETA=0:10:20
[32m[11/08 00:06:02 d2.evaluation.evaluator]: [0mInference done 2481/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2491 s/iter. ETA=0:10:15
[32m[11/08 00:06:07 d2.evaluation.evaluator]: [0mInference done 2502/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2491 s/iter. ETA=0:10:10
[32m[11/08 00:06:12 d2.evaluation.evaluator]: [0mInference done 2523/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2490 s/iter. ETA=0:10:04
[32m[11/08 00:06:17 d2.evaluation.evaluator]: [0mInference done 2544/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2490 s/iter. ETA=0:09:59
[32m[11/08 00:06:23 d2.evaluation.evaluator]: [0mInference done 2565/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2489 s/iter. ETA=0:09:54
[32m[11/08 00:06:28 d2.evaluation.evaluator]: [0mInference done 2586/4952. Dataloading: 0.0014 s/iter. Inference: 0.2445 s/iter. Eval: 0.0003 s/iter. Total: 0.2489 s/iter. ETA=0:09:48
[32m[11/08 00:06:33 d2.evaluation.evaluator]: [0mInference done 2607/4952. Dataloading: 0.0014 s/iter. Inference: 0.2445 s/iter. Eval: 0.0003 s/iter. Total: 0.2489 s/iter. ETA=0:09:43
[32m[11/08 00:06:38 d2.evaluation.evaluator]: [0mInference done 2627/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2489 s/iter. ETA=0:09:38
[32m[11/08 00:06:43 d2.evaluation.evaluator]: [0mInference done 2648/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2489 s/iter. ETA=0:09:33
[32m[11/08 00:06:48 d2.evaluation.evaluator]: [0mInference done 2669/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2489 s/iter. ETA=0:09:28
[32m[11/08 00:06:53 d2.evaluation.evaluator]: [0mInference done 2690/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2488 s/iter. ETA=0:09:22
[32m[11/08 00:06:59 d2.evaluation.evaluator]: [0mInference done 2711/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2488 s/iter. ETA=0:09:17
[32m[11/08 00:07:04 d2.evaluation.evaluator]: [0mInference done 2732/4952. Dataloading: 0.0014 s/iter. Inference: 0.2445 s/iter. Eval: 0.0003 s/iter. Total: 0.2487 s/iter. ETA=0:09:12
[32m[11/08 00:07:09 d2.evaluation.evaluator]: [0mInference done 2752/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2488 s/iter. ETA=0:09:07
[32m[11/08 00:07:14 d2.evaluation.evaluator]: [0mInference done 2773/4952. Dataloading: 0.0014 s/iter. Inference: 0.2445 s/iter. Eval: 0.0003 s/iter. Total: 0.2487 s/iter. ETA=0:09:01
[32m[11/08 00:07:19 d2.evaluation.evaluator]: [0mInference done 2794/4952. Dataloading: 0.0014 s/iter. Inference: 0.2445 s/iter. Eval: 0.0003 s/iter. Total: 0.2487 s/iter. ETA=0:08:56
[32m[11/08 00:07:24 d2.evaluation.evaluator]: [0mInference done 2814/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2487 s/iter. ETA=0:08:51
[32m[11/08 00:07:29 d2.evaluation.evaluator]: [0mInference done 2835/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2487 s/iter. ETA=0:08:46
[32m[11/08 00:07:34 d2.evaluation.evaluator]: [0mInference done 2855/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2487 s/iter. ETA=0:08:41
[32m[11/08 00:07:39 d2.evaluation.evaluator]: [0mInference done 2876/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2487 s/iter. ETA=0:08:36
[32m[11/08 00:07:44 d2.evaluation.evaluator]: [0mInference done 2897/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2487 s/iter. ETA=0:08:31
[32m[11/08 00:07:50 d2.evaluation.evaluator]: [0mInference done 2918/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2486 s/iter. ETA=0:08:25
[32m[11/08 00:07:55 d2.evaluation.evaluator]: [0mInference done 2939/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2486 s/iter. ETA=0:08:20
[32m[11/08 00:08:00 d2.evaluation.evaluator]: [0mInference done 2960/4952. Dataloading: 0.0014 s/iter. Inference: 0.2445 s/iter. Eval: 0.0003 s/iter. Total: 0.2486 s/iter. ETA=0:08:15
[32m[11/08 00:08:05 d2.evaluation.evaluator]: [0mInference done 2981/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2486 s/iter. ETA=0:08:09
[32m[11/08 00:08:10 d2.evaluation.evaluator]: [0mInference done 3001/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2486 s/iter. ETA=0:08:04
[32m[11/08 00:08:15 d2.evaluation.evaluator]: [0mInference done 3021/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2486 s/iter. ETA=0:08:00
[32m[11/08 00:08:20 d2.evaluation.evaluator]: [0mInference done 3041/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2486 s/iter. ETA=0:07:55
[32m[11/08 00:08:25 d2.evaluation.evaluator]: [0mInference done 3061/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2486 s/iter. ETA=0:07:50
[32m[11/08 00:08:30 d2.evaluation.evaluator]: [0mInference done 3082/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2486 s/iter. ETA=0:07:44
[32m[11/08 00:08:35 d2.evaluation.evaluator]: [0mInference done 3103/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2486 s/iter. ETA=0:07:39
[32m[11/08 00:08:41 d2.evaluation.evaluator]: [0mInference done 3124/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2486 s/iter. ETA=0:07:34
[32m[11/08 00:08:46 d2.evaluation.evaluator]: [0mInference done 3145/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2485 s/iter. ETA=0:07:29
[32m[11/08 00:08:51 d2.evaluation.evaluator]: [0mInference done 3165/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2485 s/iter. ETA=0:07:24
[32m[11/08 00:08:56 d2.evaluation.evaluator]: [0mInference done 3186/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2485 s/iter. ETA=0:07:18
[32m[11/08 00:09:01 d2.evaluation.evaluator]: [0mInference done 3207/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2485 s/iter. ETA=0:07:13
[32m[11/08 00:09:06 d2.evaluation.evaluator]: [0mInference done 3228/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2485 s/iter. ETA=0:07:08
[32m[11/08 00:09:11 d2.evaluation.evaluator]: [0mInference done 3249/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2485 s/iter. ETA=0:07:03
[32m[11/08 00:09:16 d2.evaluation.evaluator]: [0mInference done 3269/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2485 s/iter. ETA=0:06:58
[32m[11/08 00:09:22 d2.evaluation.evaluator]: [0mInference done 3290/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2485 s/iter. ETA=0:06:53
[32m[11/08 00:09:27 d2.evaluation.evaluator]: [0mInference done 3311/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2485 s/iter. ETA=0:06:47
[32m[11/08 00:09:32 d2.evaluation.evaluator]: [0mInference done 3332/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2485 s/iter. ETA=0:06:42
[32m[11/08 00:09:37 d2.evaluation.evaluator]: [0mInference done 3353/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2485 s/iter. ETA=0:06:37
[32m[11/08 00:09:42 d2.evaluation.evaluator]: [0mInference done 3374/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2484 s/iter. ETA=0:06:31
[32m[11/08 00:09:47 d2.evaluation.evaluator]: [0mInference done 3394/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2484 s/iter. ETA=0:06:27
[32m[11/08 00:09:52 d2.evaluation.evaluator]: [0mInference done 3414/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2484 s/iter. ETA=0:06:22
[32m[11/08 00:09:57 d2.evaluation.evaluator]: [0mInference done 3434/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2484 s/iter. ETA=0:06:17
[32m[11/08 00:10:02 d2.evaluation.evaluator]: [0mInference done 3455/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2484 s/iter. ETA=0:06:11
[32m[11/08 00:10:07 d2.evaluation.evaluator]: [0mInference done 3476/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2484 s/iter. ETA=0:06:06
[32m[11/08 00:10:13 d2.evaluation.evaluator]: [0mInference done 3497/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2484 s/iter. ETA=0:06:01
[32m[11/08 00:10:18 d2.evaluation.evaluator]: [0mInference done 3518/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2484 s/iter. ETA=0:05:56
[32m[11/08 00:10:23 d2.evaluation.evaluator]: [0mInference done 3539/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2484 s/iter. ETA=0:05:50
[32m[11/08 00:10:28 d2.evaluation.evaluator]: [0mInference done 3560/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2484 s/iter. ETA=0:05:45
[32m[11/08 00:10:33 d2.evaluation.evaluator]: [0mInference done 3581/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:05:40
[32m[11/08 00:10:39 d2.evaluation.evaluator]: [0mInference done 3602/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:05:35
[32m[11/08 00:10:44 d2.evaluation.evaluator]: [0mInference done 3623/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:05:30
[32m[11/08 00:10:49 d2.evaluation.evaluator]: [0mInference done 3644/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:05:24
[32m[11/08 00:10:54 d2.evaluation.evaluator]: [0mInference done 3665/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:05:19
[32m[11/08 00:10:59 d2.evaluation.evaluator]: [0mInference done 3686/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:05:14
[32m[11/08 00:11:04 d2.evaluation.evaluator]: [0mInference done 3706/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:05:09
[32m[11/08 00:11:10 d2.evaluation.evaluator]: [0mInference done 3727/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:05:04
[32m[11/08 00:11:15 d2.evaluation.evaluator]: [0mInference done 3748/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:04:58
[32m[11/08 00:11:20 d2.evaluation.evaluator]: [0mInference done 3768/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:04:54
[32m[11/08 00:11:25 d2.evaluation.evaluator]: [0mInference done 3787/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2484 s/iter. ETA=0:04:49
[32m[11/08 00:11:30 d2.evaluation.evaluator]: [0mInference done 3807/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2485 s/iter. ETA=0:04:44
[32m[11/08 00:11:35 d2.evaluation.evaluator]: [0mInference done 3827/4952. Dataloading: 0.0014 s/iter. Inference: 0.2450 s/iter. Eval: 0.0003 s/iter. Total: 0.2485 s/iter. ETA=0:04:39
[32m[11/08 00:11:40 d2.evaluation.evaluator]: [0mInference done 3848/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2484 s/iter. ETA=0:04:34
[32m[11/08 00:11:45 d2.evaluation.evaluator]: [0mInference done 3869/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2484 s/iter. ETA=0:04:29
[32m[11/08 00:11:50 d2.evaluation.evaluator]: [0mInference done 3890/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2484 s/iter. ETA=0:04:23
[32m[11/08 00:11:55 d2.evaluation.evaluator]: [0mInference done 3911/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:04:18
[32m[11/08 00:12:00 d2.evaluation.evaluator]: [0mInference done 3932/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:04:13
[32m[11/08 00:12:06 d2.evaluation.evaluator]: [0mInference done 3953/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:04:08
[32m[11/08 00:12:11 d2.evaluation.evaluator]: [0mInference done 3974/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:04:02
[32m[11/08 00:12:16 d2.evaluation.evaluator]: [0mInference done 3995/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:03:57
[32m[11/08 00:12:21 d2.evaluation.evaluator]: [0mInference done 4015/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:03:52
[32m[11/08 00:12:26 d2.evaluation.evaluator]: [0mInference done 4036/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:03:47
[32m[11/08 00:12:31 d2.evaluation.evaluator]: [0mInference done 4057/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:03:42
[32m[11/08 00:12:36 d2.evaluation.evaluator]: [0mInference done 4078/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:03:36
[32m[11/08 00:12:41 d2.evaluation.evaluator]: [0mInference done 4098/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:03:32
[32m[11/08 00:12:47 d2.evaluation.evaluator]: [0mInference done 4119/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2483 s/iter. ETA=0:03:26
[32m[11/08 00:12:52 d2.evaluation.evaluator]: [0mInference done 4140/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2482 s/iter. ETA=0:03:21
[32m[11/08 00:12:57 d2.evaluation.evaluator]: [0mInference done 4161/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2482 s/iter. ETA=0:03:16
[32m[11/08 00:13:02 d2.evaluation.evaluator]: [0mInference done 4182/4952. Dataloading: 0.0014 s/iter. Inference: 0.2449 s/iter. Eval: 0.0003 s/iter. Total: 0.2482 s/iter. ETA=0:03:11
[32m[11/08 00:13:07 d2.evaluation.evaluator]: [0mInference done 4204/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2482 s/iter. ETA=0:03:05
[32m[11/08 00:13:12 d2.evaluation.evaluator]: [0mInference done 4225/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2481 s/iter. ETA=0:03:00
[32m[11/08 00:13:17 d2.evaluation.evaluator]: [0mInference done 4246/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2481 s/iter. ETA=0:02:55
[32m[11/08 00:13:23 d2.evaluation.evaluator]: [0mInference done 4267/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2481 s/iter. ETA=0:02:49
[32m[11/08 00:13:28 d2.evaluation.evaluator]: [0mInference done 4288/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2481 s/iter. ETA=0:02:44
[32m[11/08 00:13:33 d2.evaluation.evaluator]: [0mInference done 4310/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2481 s/iter. ETA=0:02:39
[32m[11/08 00:13:38 d2.evaluation.evaluator]: [0mInference done 4331/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2481 s/iter. ETA=0:02:34
[32m[11/08 00:13:43 d2.evaluation.evaluator]: [0mInference done 4352/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2480 s/iter. ETA=0:02:28
[32m[11/08 00:13:49 d2.evaluation.evaluator]: [0mInference done 4373/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2480 s/iter. ETA=0:02:23
[32m[11/08 00:13:54 d2.evaluation.evaluator]: [0mInference done 4394/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2480 s/iter. ETA=0:02:18
[32m[11/08 00:13:59 d2.evaluation.evaluator]: [0mInference done 4414/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2480 s/iter. ETA=0:02:13
[32m[11/08 00:14:04 d2.evaluation.evaluator]: [0mInference done 4435/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2480 s/iter. ETA=0:02:08
[32m[11/08 00:14:09 d2.evaluation.evaluator]: [0mInference done 4456/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2480 s/iter. ETA=0:02:03
[32m[11/08 00:14:14 d2.evaluation.evaluator]: [0mInference done 4477/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2480 s/iter. ETA=0:01:57
[32m[11/08 00:14:19 d2.evaluation.evaluator]: [0mInference done 4498/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2480 s/iter. ETA=0:01:52
[32m[11/08 00:14:24 d2.evaluation.evaluator]: [0mInference done 4519/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2480 s/iter. ETA=0:01:47
[32m[11/08 00:14:30 d2.evaluation.evaluator]: [0mInference done 4540/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2479 s/iter. ETA=0:01:42
[32m[11/08 00:14:35 d2.evaluation.evaluator]: [0mInference done 4560/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2479 s/iter. ETA=0:01:37
[32m[11/08 00:14:40 d2.evaluation.evaluator]: [0mInference done 4581/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2479 s/iter. ETA=0:01:31
[32m[11/08 00:14:45 d2.evaluation.evaluator]: [0mInference done 4602/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2479 s/iter. ETA=0:01:26
[32m[11/08 00:14:50 d2.evaluation.evaluator]: [0mInference done 4623/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2479 s/iter. ETA=0:01:21
[32m[11/08 00:14:55 d2.evaluation.evaluator]: [0mInference done 4644/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2479 s/iter. ETA=0:01:16
[32m[11/08 00:15:00 d2.evaluation.evaluator]: [0mInference done 4665/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2479 s/iter. ETA=0:01:11
[32m[11/08 00:15:05 d2.evaluation.evaluator]: [0mInference done 4686/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2479 s/iter. ETA=0:01:05
[32m[11/08 00:15:11 d2.evaluation.evaluator]: [0mInference done 4707/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2479 s/iter. ETA=0:01:00
[32m[11/08 00:15:16 d2.evaluation.evaluator]: [0mInference done 4727/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2479 s/iter. ETA=0:00:55
[32m[11/08 00:15:21 d2.evaluation.evaluator]: [0mInference done 4748/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2479 s/iter. ETA=0:00:50
[32m[11/08 00:15:26 d2.evaluation.evaluator]: [0mInference done 4769/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2479 s/iter. ETA=0:00:45
[32m[11/08 00:15:31 d2.evaluation.evaluator]: [0mInference done 4791/4952. Dataloading: 0.0014 s/iter. Inference: 0.2446 s/iter. Eval: 0.0003 s/iter. Total: 0.2478 s/iter. ETA=0:00:39
[32m[11/08 00:15:36 d2.evaluation.evaluator]: [0mInference done 4811/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2478 s/iter. ETA=0:00:34
[32m[11/08 00:15:41 d2.evaluation.evaluator]: [0mInference done 4831/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2478 s/iter. ETA=0:00:29
[32m[11/08 00:15:47 d2.evaluation.evaluator]: [0mInference done 4852/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2479 s/iter. ETA=0:00:24
[32m[11/08 00:15:52 d2.evaluation.evaluator]: [0mInference done 4872/4952. Dataloading: 0.0014 s/iter. Inference: 0.2447 s/iter. Eval: 0.0003 s/iter. Total: 0.2479 s/iter. ETA=0:00:19
[32m[11/08 00:15:57 d2.evaluation.evaluator]: [0mInference done 4892/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2479 s/iter. ETA=0:00:14
[32m[11/08 00:16:02 d2.evaluation.evaluator]: [0mInference done 4912/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2479 s/iter. ETA=0:00:09
[32m[11/08 00:16:07 d2.evaluation.evaluator]: [0mInference done 4933/4952. Dataloading: 0.0014 s/iter. Inference: 0.2448 s/iter. Eval: 0.0003 s/iter. Total: 0.2479 s/iter. ETA=0:00:04
[32m[11/08 00:16:12 d2.evaluation.evaluator]: [0mTotal inference time: 0:20:26.357262 (0.247899 s / iter per device, on 1 devices)
[32m[11/08 00:16:12 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:20:10 (0.244761 s / iter per device, on 1 devices)
Loading and preparing results...
DONE (t=1.58s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=24.81s).
Accumulating evaluation results...
DONE (t=2.77s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.477
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.675
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.518
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.302
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.516
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.615
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.356
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.583
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.621
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.417
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.669
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.771
Per-category bbox AP: 
| category      | AP     | category     | AP     | category       | AP     |
|:--------------|:-------|:-------------|:-------|:---------------|:-------|
| person        | 59.258 | bicycle      | 34.783 | car            | 49.099 |
| motorcycle    | 47.362 | airplane     | 73.314 | bus            | 71.033 |
| train         | 71.117 | truck        | 47.109 | boat           | 29.849 |
| traffic light | 29.872 | fire hydrant | 69.541 | stop sign      | 73.640 |
| parking meter | 51.954 | bench        | 30.557 | bird           | 40.033 |
| cat           | 70.765 | dog          | 67.793 | horse          | 61.215 |
| sheep         | 57.370 | cow          | 61.184 | elephant       | 68.452 |
| bear          | 75.807 | zebra        | 71.531 | giraffe        | 71.720 |
| backpack      | 21.449 | umbrella     | 45.971 | handbag        | 22.282 |
| tie           | 41.653 | suitcase     | 45.385 | frisbee        | 69.864 |
| skis          | 29.580 | snowboard    | 39.686 | sports ball    | 49.345 |
| kite          | 46.692 | baseball bat | 34.184 | baseball glove | 38.866 |
| skateboard    | 57.014 | surfboard    | 40.361 | tennis racket  | 54.307 |
| bottle        | 45.229 | wine glass   | 41.465 | cup            | 47.486 |
| fork          | 46.201 | knife        | 26.772 | spoon          | 28.326 |
| bowl          | 48.494 | banana       | 30.046 | apple          | 24.012 |
| sandwich      | 43.917 | orange       | 33.680 | broccoli       | 27.232 |
| carrot        | 26.542 | hot dog      | 46.143 | pizza          | 55.048 |
| donut         | 53.031 | cake         | 43.646 | chair          | 34.468 |
| couch         | 52.652 | potted plant | 34.346 | bed            | 52.015 |
| dining table  | 38.838 | toilet       | 66.643 | tv             | 62.952 |
| laptop        | 63.706 | mouse        | 65.172 | remote         | 39.602 |
| keyboard      | 59.635 | cell phone   | 42.225 | microwave      | 64.881 |
| oven          | 41.530 | toaster      | 53.655 | sink           | 39.758 |
| refrigerator  | 61.785 | book         | 20.195 | clock          | 51.254 |
| vase          | 46.236 | scissors     | 35.482 | teddy bear     | 46.791 |
| hair drier    | 19.294 | toothbrush   | 38.514 |                |        |
[32m[11/08 00:16:44 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/08 00:16:44 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/08 00:16:44 d2.evaluation.testing]: [0mcopypaste: 47.7487,67.4983,51.7848,30.2345,51.5642,61.4834


Job done.
Date:  mar 8 nov 2022, 00.17.05, CET
